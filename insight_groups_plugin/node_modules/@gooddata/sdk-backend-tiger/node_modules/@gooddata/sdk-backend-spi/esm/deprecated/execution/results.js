// (C) 2019-2022 GoodData Corporation
/* eslint-disable @typescript-eslint/no-empty-interface, import/namespace */
import * as m from "@gooddata/sdk-model";
//
// Type guards
//
/**
 * Type-guard testing whether the provided object is an instance of {@link IAttributeDescriptor}.
 *
 * @deprecated Use {@link @gooddata/sdk-model#isAttributeDescriptor}
 * @public
 */
export var isAttributeDescriptor = m.isAttributeDescriptor;
/**
 * Type-guard testing whether the provided object is an instance of {@link IMeasureGroupDescriptor}.
 *
 * @deprecated Use {@link @gooddata/sdk-model#isMeasureGroupDescriptor}
 * @public
 */
export var isMeasureGroupDescriptor = m.isMeasureGroupDescriptor;
/**
 * Type-guard testing whether the provided object is an instance of {@link IMeasureDescriptor}.
 *
 * @deprecated Use {@link @gooddata/sdk-model#isMeasureDescriptor}
 * @public
 */
export var isMeasureDescriptor = m.isMeasureDescriptor;
/**
 * Type-guard testing whether the provided object is an instance of {@link ITotalDescriptor}.
 *
 * @deprecated Use {@link @gooddata/sdk-model#isTotalDescriptor}
 * @public
 */
export var isTotalDescriptor = m.isTotalDescriptor;
/**
 * Type-guard testing whether the provided object is an instance of {@link IResultAttributeHeader}.
 *
 * @deprecated Use {@link @gooddata/sdk-model#isResultAttributeHeader}
 * @public
 */
export var isResultAttributeHeader = m.isResultAttributeHeader;
/**
 * Type-guard testing whether the provided object is an instance of {@link IResultMeasureHeader}.
 *
 * @deprecated Use {@link @gooddata/sdk-model#isResultMeasureHeader}
 * @public
 */
export var isResultMeasureHeader = m.isResultMeasureHeader;
/**
 * Type-guard testing whether the provided object is an instance of {@link IResultTotalHeader}.
 *
 * @deprecated Use {@link @gooddata/sdk-model#isResultTotalHeader}
 * @public
 */
export var isResultTotalHeader = m.isResultTotalHeader;
//
//
//
/**
 * Returns item name contained within a result header.
 *
 * @param header - header of any type
 * @deprecated Use {@link @gooddata/sdk-model#resultHeaderName}
 * @public
 */
export var resultHeaderName = m.resultHeaderName;
/**
 * Returns local identifier of attribute described in the provided attribute descriptor.
 *
 * @param descriptor - attribute descriptor, must be specified
 * @deprecated Use {@link @gooddata/sdk-model#attributeDescriptorLocalId}
 * @public
 */
export var attributeDescriptorLocalId = m.attributeDescriptorLocalId;
/**
 * Returns name of attribute described in the provided attribute descriptor.
 *
 * @param descriptor - attribute descriptor, must be specified
 * @deprecated Use {@link @gooddata/sdk-model#attributeDescriptorName}
 * @public
 */
export var attributeDescriptorName = m.attributeDescriptorName;
//# sourceMappingURL=results.js.map