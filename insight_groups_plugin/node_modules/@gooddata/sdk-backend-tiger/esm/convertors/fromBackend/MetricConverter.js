// (C) 2021-2023 GoodData Corporation
import { newMeasureMetadataObject } from "@gooddata/sdk-backend-base";
import { idRef } from "@gooddata/sdk-model";
import { isInheritedObject } from "./ObjectInheritance";
/**
 * Type guard checking whether object is an instance of JsonApiMetricOutDocument.
 */
function isJsonApiMetricOutDocument(obj) {
    return obj.data !== undefined;
}
export function convertMetricFromBackend(data) {
    var _a = getPropertiesFromData(data), id = _a.id, attributes = _a.attributes, object = _a.object;
    var ref = idRef(id, "measure");
    return newMeasureMetadataObject(ref, function (m) {
        return m
            .id(id)
            .title((attributes === null || attributes === void 0 ? void 0 : attributes.title) || "")
            .isLocked(isInheritedObject(object))
            .description((attributes === null || attributes === void 0 ? void 0 : attributes.description) || "")
            .expression(attributes.content.maql)
            .format(attributes.content.format || "");
    });
}
function getPropertiesFromData(data) {
    if (isJsonApiMetricOutDocument(data)) {
        return {
            id: data.data.id,
            attributes: data.data.attributes,
            object: data.data,
        };
    }
    return {
        id: data.id,
        attributes: data.attributes,
        object: data,
    };
}
//# sourceMappingURL=MetricConverter.js.map