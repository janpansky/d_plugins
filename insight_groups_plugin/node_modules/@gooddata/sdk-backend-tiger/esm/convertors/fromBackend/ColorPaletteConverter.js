// (C) 2022 GoodData Corporation
import { idRef, isColorPaletteItem } from "@gooddata/sdk-model";
export var unwrapColorPaletteContent = function (value) {
    var _a, _b;
    return (_b = (_a = value) === null || _a === void 0 ? void 0 : _a.colorPalette) !== null && _b !== void 0 ? _b : [];
};
export var convertColorPaletteWithLinks = function (colorPaletteObject) {
    var id = colorPaletteObject.id, attributes = colorPaletteObject.attributes, links = colorPaletteObject.links;
    var colorPalette = getColorPaletteFromMDObject(colorPaletteObject);
    return {
        id: id,
        ref: idRef(id),
        title: attributes.name,
        colorPalette: isValidColorPalette(colorPalette) ? colorPalette : [],
        uri: links.self,
        description: "",
        type: "colorPalette",
        production: false,
        unlisted: false,
        deprecated: false,
    };
};
export var getColorPaletteFromMDObject = function (_a) {
    var attributes = _a.attributes;
    return unwrapColorPaletteContent(attributes.content);
};
export var isValidColorPalette = function (colorPalette) {
    return colorPalette && Array.isArray(colorPalette) && colorPalette.every(isColorPaletteItem);
};
export var convertColorPalette = function (_a) {
    var _b = _a.data, id = _b.id, attributes = _b.attributes, type = _b.type, links = _a.links;
    return convertColorPaletteWithLinks({ id: id, attributes: attributes, links: links, type: type });
};
//# sourceMappingURL=ColorPaletteConverter.js.map