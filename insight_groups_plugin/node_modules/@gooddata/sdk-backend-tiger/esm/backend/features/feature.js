// (C) 2020-2023 GoodData Corporation
import { __assign } from "tslib";
import { FeatureFlagsValues, TigerFeaturesNames } from "../uiFeatures";
import { convertState } from "./state";
export function mapFeatures(features) {
    return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, loadFeature(features, TigerFeaturesNames.EnableKPIDashboardExportPDF, "enableKPIDashboardExportPDF", "BOOLEAN", FeatureFlagsValues.enableKPIDashboardExportPDF)), loadFeature(features, TigerFeaturesNames.EnableSortingByTotalGroup, "enableSortingByTotalGroup", "BOOLEAN", FeatureFlagsValues.enableSortingByTotalGroup)), loadFeature(features, TigerFeaturesNames.ADMeasureValueFilterNullAsZeroOption, "ADMeasureValueFilterNullAsZeroOption", "STRING", FeatureFlagsValues.ADMeasureValueFilterNullAsZeroOption)), loadFeature(features, TigerFeaturesNames.EnableMultipleDates, "enableMultipleDates", "BOOLEAN", FeatureFlagsValues.enableMultipleDates)), loadFeature(features, TigerFeaturesNames.EnableKPIDashboardDeleteFilterButton, "enableKPIDashboardDeleteFilterButton", "BOOLEAN", FeatureFlagsValues.enableKPIDashboardDeleteFilterButton)), loadFeature(features, TigerFeaturesNames.DashboardEditModeDevRollout, "dashboardEditModeDevRollout", "BOOLEAN", FeatureFlagsValues.dashboardEditModeDevRollout)), loadFeature(features, TigerFeaturesNames.EnableMetricSqlAndDataExplain, "enableMetricSqlAndDataExplain", "BOOLEAN", FeatureFlagsValues.enableMetricSqlAndDataExplain)), loadFeature(features, TigerFeaturesNames.EnableLongitudeAndLatitudeLabels, "enableLongitudeAndLatitudeLabels", "BOOLEAN", FeatureFlagsValues.enableLongitudeAndLatitudeLabels)), loadFeature(features, TigerFeaturesNames.EnableDescriptions, "enableDescriptions", "BOOLEAN", FeatureFlagsValues.enableDescriptions)), loadFeature(features, TigerFeaturesNames.EnableAnalyticalDashboardPermissions, "enableAnalyticalDashboardPermissions", "BOOLEAN", FeatureFlagsValues.enableAnalyticalDashboardPermissions)), loadFeature(features, TigerFeaturesNames.EnablePushpinGeoChart, "enablePushpinGeoChart", "BOOLEAN", FeatureFlagsValues.enablePushpinGeoChart)), loadFeature(features, TigerFeaturesNames.EnableKPIAttributeFilterRenaming, "enableKPIAttributeFilterRenaming", "BOOLEAN", FeatureFlagsValues.enableKPIAttributeFilterRenaming)), loadFeature(features, TigerFeaturesNames.EnableSqlDatasets, "enableSqlDatasets", "BOOLEAN", FeatureFlagsValues.enableSqlDatasets));
}
function loadFeature(features, feature, name, outputType, possibleValues) {
    var _a;
    var item = features[feature];
    if (!item) {
        return {};
    }
    var val = getValueByType(item.type, item.value, outputType, possibleValues);
    return val !== undefined ? (_a = {}, _a[name] = val, _a) : {};
}
function getValueByType(inputType, value, outputType, possibleValues) {
    switch (inputType) {
        case "BOOLEAN":
            if (value !== undefined) {
                return value;
            }
            break;
        case "STRING": {
            var state = convertState(outputType, possibleValues, value);
            if (state !== undefined) {
                return state;
            }
            break;
        }
        default:
            break;
    }
    return undefined;
}
//# sourceMappingURL=feature.js.map