import { __assign, __awaiter, __generator } from "tslib";
import { DefaultFeatureFlags } from "../uiFeatures";
import { getFeatureHubFeatures } from "./hub";
import { getStaticFeatures } from "./static";
var TigerFeaturesService = /** @class */ (function () {
    function TigerFeaturesService(authCall) {
        this.authCall = authCall;
    }
    TigerFeaturesService.prototype.getFeatures = function (profile, wsContext) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                        var prof, _a, results;
                        return __generator(this, function (_b) {
                            switch (_b.label) {
                                case 0:
                                    _a = profile;
                                    if (_a) return [3 /*break*/, 2];
                                    return [4 /*yield*/, client.profile.getCurrent()];
                                case 1:
                                    _a = (_b.sent());
                                    _b.label = 2;
                                case 2:
                                    prof = _a;
                                    return [4 /*yield*/, loadFeatures(prof, wsContext)];
                                case 3:
                                    results = _b.sent();
                                    return [2 /*return*/, __assign(__assign({}, DefaultFeatureFlags), results)];
                            }
                        });
                    }); })];
            });
        });
    };
    return TigerFeaturesService;
}());
export { TigerFeaturesService };
function loadFeatures(profile, wsContext) {
    if (wsContext === void 0) { wsContext = {}; }
    return __awaiter(this, void 0, void 0, function () {
        var features;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    features = profile.features || {};
                    if (!featuresAreLive(features)) return [3 /*break*/, 2];
                    return [4 /*yield*/, getFeatureHubFeatures(features.live, wsContext)];
                case 1: return [2 /*return*/, _a.sent()];
                case 2:
                    if (!featuresAreStatic(features)) return [3 /*break*/, 4];
                    return [4 /*yield*/, getStaticFeatures(features.static)];
                case 3: return [2 /*return*/, _a.sent()];
                case 4: return [2 /*return*/, Promise.resolve({})];
            }
        });
    });
}
function featuresAreLive(item) {
    return Boolean(item === null || item === void 0 ? void 0 : item.live);
}
function featuresAreStatic(item) {
    return Boolean(item === null || item === void 0 ? void 0 : item.static);
}
export function pickContext(attributes) {
    var context = {};
    if ((attributes === null || attributes === void 0 ? void 0 : attributes["earlyAccess"]) !== undefined) {
        context.earlyAccess = attributes["earlyAccess"];
    }
    return context;
}
//# sourceMappingURL=index.js.map