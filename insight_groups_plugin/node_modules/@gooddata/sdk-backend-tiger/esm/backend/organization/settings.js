import { __assign, __awaiter, __extends, __generator } from "tslib";
import { unwrapSettingContent } from "../../convertors/fromBackend/SettingsConverter";
import { TigerSettingsService } from "../settings";
var OrganizationSettingsService = /** @class */ (function (_super) {
    __extends(OrganizationSettingsService, _super);
    function OrganizationSettingsService(authCall) {
        var _this = _super.call(this) || this;
        _this.authCall = authCall;
        return _this;
    }
    OrganizationSettingsService.prototype.setWhiteLabeling = function (whiteLabeling) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.setSetting("WHITE_LABELING", whiteLabeling)];
            });
        });
    };
    OrganizationSettingsService.prototype.getSettings = function () {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                            return [2 /*return*/, client.entities.getAllEntitiesOrganizationSettings({})];
                        }); }); })];
                    case 1:
                        data = (_a.sent()).data;
                        return [2 /*return*/, data.data.reduce(function (result, setting) {
                                var _a;
                                var _b;
                                return __assign(__assign({}, result), (_a = {}, _a[setting.id] = unwrapSettingContent((_b = setting.attributes) === null || _b === void 0 ? void 0 : _b.content), _a));
                            }, {})];
                }
            });
        });
    };
    OrganizationSettingsService.prototype.getSettingByType = function (type) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) {
                        return client.entities.getAllEntitiesOrganizationSettings({
                            filter: "type==" + type,
                        });
                    })];
            });
        });
    };
    OrganizationSettingsService.prototype.updateSetting = function (type, id, content) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) {
                        return client.entities.updateEntityOrganizationSettings({
                            id: id,
                            jsonApiOrganizationSettingInDocument: {
                                data: {
                                    type: "organizationSetting",
                                    id: id,
                                    attributes: {
                                        content: content,
                                        type: type,
                                    },
                                },
                            },
                        });
                    })];
            });
        });
    };
    OrganizationSettingsService.prototype.createSetting = function (type, id, content) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) {
                        return client.entities.createEntityOrganizationSettings({
                            jsonApiOrganizationSettingInDocument: {
                                data: {
                                    type: "organizationSetting",
                                    id: id,
                                    attributes: {
                                        content: content,
                                        type: type,
                                    },
                                },
                            },
                        });
                    })];
            });
        });
    };
    return OrganizationSettingsService;
}(TigerSettingsService));
export { OrganizationSettingsService };
//# sourceMappingURL=settings.js.map