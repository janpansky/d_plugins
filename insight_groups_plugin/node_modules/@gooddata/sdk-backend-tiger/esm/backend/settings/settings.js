import { __awaiter, __generator } from "tslib";
// (C) 2020-2023 GoodData Corporation
import { UnexpectedError } from "@gooddata/sdk-backend-spi";
import { v4 as uuidv4 } from "uuid";
import { convertApiError } from "../../utils/errorHandling";
var TigerSettingsService = /** @class */ (function () {
    function TigerSettingsService() {
    }
    TigerSettingsService.prototype.getSettings = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                throw new UnexpectedError("This method needs to be implemented.");
            });
        });
    };
    TigerSettingsService.prototype.setLocale = function (locale) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.setSetting("LOCALE", { value: locale })];
            });
        });
    };
    TigerSettingsService.prototype.setSetting = function (type, content) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var data, settings, id, record, error_1;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _c.trys.push([0, 6, , 7]);
                        return [4 /*yield*/, this.getSettingByType(type)];
                    case 1:
                        data = (_c.sent()).data;
                        settings = data.data;
                        if (!(settings.length === 0)) return [3 /*break*/, 3];
                        id = uuidv4();
                        return [4 /*yield*/, this.createSetting(type, id, content)];
                    case 2:
                        _c.sent();
                        return [3 /*break*/, 5];
                    case 3:
                        record = settings[0];
                        return [4 /*yield*/, this.updateSetting((_b = (_a = record.attributes) === null || _a === void 0 ? void 0 : _a.type) !== null && _b !== void 0 ? _b : type, record.id, content)];
                    case 4:
                        _c.sent();
                        _c.label = 5;
                    case 5: return [3 /*break*/, 7];
                    case 6:
                        error_1 = _c.sent();
                        throw convertApiError(error_1);
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    TigerSettingsService.prototype.getSettingByType = function (_type) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                throw new UnexpectedError("This method needs to be implemented.");
            });
        });
    };
    TigerSettingsService.prototype.updateSetting = function (_type, _id, _content) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                throw new UnexpectedError("This method needs to be implemented.");
            });
        });
    };
    TigerSettingsService.prototype.createSetting = function (_type, _id, _content) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                throw new UnexpectedError("This method needs to be implemented.");
            });
        });
    };
    return TigerSettingsService;
}());
export { TigerSettingsService };
//# sourceMappingURL=settings.js.map