import { __assign, __awaiter, __generator, __spreadArrays } from "tslib";
import { AssigneeIdentifierTypeEnum } from "@gooddata/api-client-tiger";
import { isGranularUserAccessGrantee, } from "@gooddata/sdk-model";
import { convertUserAssignee, convertUserGroupAssignee, convertUserPermission, convertUserGroupPermission, } from "../../../convertors/fromBackend/AccessControlConverter";
import { objRefToIdentifier } from "../../../utils/api";
var TigerWorkspaceAccessControlService = /** @class */ (function () {
    function TigerWorkspaceAccessControlService(authCall, workspace) {
        this.authCall = authCall;
        this.workspace = workspace;
    }
    TigerWorkspaceAccessControlService.prototype.getAccessList = function (sharedObject) {
        return __awaiter(this, void 0, void 0, function () {
            var objectId, permissions;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, objRefToIdentifier(sharedObject, this.authCall)];
                    case 1:
                        objectId = _a.sent();
                        return [4 /*yield*/, this.authCall(function (client) {
                                return client.actions
                                    .permissions({ workspaceId: _this.workspace, dashboardId: objectId })
                                    .then(function (result) { return result.data; });
                            })];
                    case 2:
                        permissions = _a.sent();
                        return [2 /*return*/, __spreadArrays(permissions.users.map(convertUserPermission), permissions.userGroups.map(convertUserGroupPermission))];
                }
            });
        });
    };
    TigerWorkspaceAccessControlService.prototype.grantAccess = function (sharedObject, grantees) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.changeAccess(sharedObject, grantees)];
            });
        });
    };
    TigerWorkspaceAccessControlService.prototype.revokeAccess = function (sharedObject, grantees) {
        return __awaiter(this, void 0, void 0, function () {
            var granteesToRevokeAccess;
            return __generator(this, function (_a) {
                granteesToRevokeAccess = grantees.map(function (grantee) { return (__assign(__assign({}, grantee), { permissions: [] })); });
                return [2 /*return*/, this.changeAccess(sharedObject, granteesToRevokeAccess)];
            });
        });
    };
    TigerWorkspaceAccessControlService.prototype.changeAccess = function (sharedObject, grantees) {
        return __awaiter(this, void 0, void 0, function () {
            var objectId, permissionsForAssignee;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, objRefToIdentifier(sharedObject, this.authCall)];
                    case 1:
                        objectId = _a.sent();
                        return [4 /*yield*/, Promise.all(grantees.map(function (grantee) { return __awaiter(_this, void 0, void 0, function () {
                                var _a, _b;
                                return __generator(this, function (_c) {
                                    switch (_c.label) {
                                        case 0:
                                            _a = {};
                                            _b = {};
                                            return [4 /*yield*/, objRefToIdentifier(grantee.granteeRef, this.authCall)];
                                        case 1: return [2 /*return*/, (_a.assigneeIdentifier = (_b.id = _c.sent(),
                                                _b.type = isGranularUserAccessGrantee(grantee)
                                                    ? AssigneeIdentifierTypeEnum.USER
                                                    : AssigneeIdentifierTypeEnum.USER_GROUP,
                                                _b),
                                                _a.permissions = grantee.permissions,
                                                _a)];
                                    }
                                });
                            }); }))];
                    case 2:
                        permissionsForAssignee = _a.sent();
                        return [4 /*yield*/, this.authCall(function (client) {
                                return client.actions
                                    .managePermissions({
                                    workspaceId: _this.workspace,
                                    dashboardId: objectId,
                                    permissionsForAssignee: permissionsForAssignee,
                                })
                                    .then(function (result) { return result.data; });
                            })];
                    case 3:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    TigerWorkspaceAccessControlService.prototype.getAvailableGrantees = function (sharedObject, search) {
        return __awaiter(this, void 0, void 0, function () {
            var objectId, availableGrantees;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, objRefToIdentifier(sharedObject, this.authCall)];
                    case 1:
                        objectId = _a.sent();
                        return [4 /*yield*/, this.authCall(function (client) {
                                return client.actions
                                    .availableAssignes({
                                    workspaceId: _this.workspace,
                                    dashboardId: objectId,
                                })
                                    .then(function (result) { return result.data; })
                                    .then(function (assignees) { return (search ? filterAssignees(assignees, search) : assignees); });
                            })];
                    case 2:
                        availableGrantees = _a.sent();
                        return [2 /*return*/, __spreadArrays(availableGrantees.users.map(convertUserAssignee), availableGrantees.userGroups.map(convertUserGroupAssignee))];
                }
            });
        });
    };
    return TigerWorkspaceAccessControlService;
}());
export { TigerWorkspaceAccessControlService };
var isNameMatchingSearchString = function (name, searchString) {
    return (name === null || name === void 0 ? void 0 : name.toLowerCase().indexOf(searchString)) > -1;
};
var filterAssignees = function (grantees, search) {
    var lowercaseSearch = search.toLocaleLowerCase();
    var users = grantees.users, userGroups = grantees.userGroups;
    var filteredUsers = users.filter(function (_a) {
        var name = _a.name, id = _a.id;
        return isNameMatchingSearchString(name !== null && name !== void 0 ? name : id, lowercaseSearch);
    });
    var filteredUserGroups = userGroups.filter(function (_a) {
        var name = _a.name, id = _a.id;
        return isNameMatchingSearchString(name !== null && name !== void 0 ? name : id, lowercaseSearch);
    });
    return {
        users: filteredUsers,
        userGroups: filteredUserGroups,
    };
};
//# sourceMappingURL=index.js.map