import { __assign } from "tslib";
import { uriRef } from "@gooddata/sdk-model";
var getUserFullName = function (firstName, lastName) {
    if (!firstName && !lastName) {
        return undefined;
    }
    return [firstName, lastName].filter(Boolean).join(" ");
};
export var convertUser = function (user) {
    var email = user.email, login = user.login, firstName = user.firstName, lastName = user.lastName, links = user.links;
    return {
        ref: uriRef(links.self),
        email: email,
        login: login,
        firstName: firstName,
        lastName: lastName,
        fullName: getUserFullName(firstName, lastName),
    };
};
export var convertWorkspaceUser = function (user) {
    var getStatusFromState = function (state) {
        switch (state) {
            case "ACTIVE":
                return "ENABLED";
            case "INACTIVE":
                return "DISABLED";
            default:
                return;
        }
    };
    var email = user.email, login = user.login, uri = user.uri, firstName = user.firstName, lastName = user.lastName, state = user.state;
    var status = getStatusFromState(state);
    var statusProp = status ? { status: status } : {};
    return __assign({ ref: uriRef(uri), email: email,
        login: login,
        uri: uri, firstName: firstName !== null && firstName !== void 0 ? firstName : undefined, lastName: lastName !== null && lastName !== void 0 ? lastName : undefined, fullName: getUserFullName(firstName, lastName) }, statusProp);
};
export var convertUsersItem = function (user) {
    var _a = user.content, email = _a.email, login = _a.login, firstname = _a.firstname, lastname = _a.lastname, status = _a.status, links = user.links;
    var statusProp = status ? { status: status } : {};
    return __assign({ ref: uriRef(links.self), uri: links.self, email: email, login: login, firstName: firstname, lastName: lastname, fullName: getUserFullName(firstname, lastname) }, statusProp);
};
//# sourceMappingURL=UsersConverter.js.map