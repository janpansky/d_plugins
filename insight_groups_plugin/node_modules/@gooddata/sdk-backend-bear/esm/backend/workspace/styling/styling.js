import { __awaiter, __generator } from "tslib";
import { GdcMetadataObject, GdcMetadata } from "@gooddata/api-model-bear";
import { isApiResponseError } from "../../../utils/errorHandling";
var BearWorkspaceStyling = /** @class */ (function () {
    function BearWorkspaceStyling(authCall, workspace) {
        var _this = this;
        this.authCall = authCall;
        this.workspace = workspace;
        this.getColorPalette = function () { return __awaiter(_this, void 0, void 0, function () {
            var palette;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.authCall(function (sdk) { return sdk.project.getColorPaletteWithGuids(_this.workspace); })];
                    case 1:
                        palette = _a.sent();
                        return [2 /*return*/, palette || []];
                }
            });
        }); };
        this.getTheme = function () { return __awaiter(_this, void 0, void 0, function () {
            var config, identifier;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.authCall(function (sdk) { return sdk.project.getProjectFeatureFlags(_this.workspace); })];
                    case 1:
                        config = _a.sent();
                        identifier = config.selectedUiTheme;
                        return [2 /*return*/, identifier
                                ? this.authCall(function (sdk) {
                                    return sdk.md
                                        .getObjectByIdentifier(_this.workspace, identifier)
                                        .then(function (object) {
                                        var unwrappedObject = GdcMetadataObject.unwrapMetadataObject(object);
                                        return (GdcMetadata.isTheme(unwrappedObject) && unwrappedObject.content) || {};
                                    })
                                        .catch(function (err) {
                                        if (isApiResponseError(err)) {
                                            return {};
                                        }
                                        throw err;
                                    });
                                })
                                : {}];
                }
            });
        }); };
    }
    return BearWorkspaceStyling;
}());
export { BearWorkspaceStyling };
//# sourceMappingURL=styling.js.map