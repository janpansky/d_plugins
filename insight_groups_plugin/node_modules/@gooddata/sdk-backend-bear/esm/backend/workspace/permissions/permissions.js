import { __awaiter, __generator } from "tslib";
import { convertPermissions } from "../../../convertors/toBackend/WorkspaceConverter";
import { userLoginMd5FromAuthenticatedPrincipal } from "../../../utils/api";
var emptyPermissions = { permissions: {} };
var BearWorkspacePermissionsFactory = /** @class */ (function () {
    function BearWorkspacePermissionsFactory(authCall, workspace) {
        this.authCall = authCall;
        this.workspace = workspace;
    }
    BearWorkspacePermissionsFactory.prototype.getPermissionsForCurrentUser = function () {
        return __awaiter(this, void 0, void 0, function () {
            var permissions;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.authCall(function (sdk, _a) {
                            var getPrincipal = _a.getPrincipal;
                            return __awaiter(_this, void 0, void 0, function () {
                                var userLoginMd5;
                                return __generator(this, function (_b) {
                                    switch (_b.label) {
                                        case 0: return [4 /*yield*/, userLoginMd5FromAuthenticatedPrincipal(getPrincipal)];
                                        case 1:
                                            userLoginMd5 = _b.sent();
                                            return [2 /*return*/, sdk.project.getPermissions(this.workspace, userLoginMd5)];
                                    }
                                });
                            });
                        })];
                    case 1:
                        permissions = _a.sent();
                        return [2 /*return*/, convertPermissions(permissions.associatedPermissions || emptyPermissions)];
                }
            });
        });
    };
    return BearWorkspacePermissionsFactory;
}());
export { BearWorkspacePermissionsFactory };
//# sourceMappingURL=permissions.js.map