import { __awaiter, __generator, __spreadArrays } from "tslib";
import { convertWorkspaceUserGroup } from "../../../convertors/fromBackend/UserGroupsConverter";
import { InMemoryPaging } from "@gooddata/sdk-backend-base";
var BearWorkspaceUserGroupsQuery = /** @class */ (function () {
    function BearWorkspaceUserGroupsQuery(authCall, workspace) {
        this.authCall = authCall;
        this.workspace = workspace;
    }
    BearWorkspaceUserGroupsQuery.prototype.queryAllPages = function (limit) {
        return __awaiter(this, void 0, void 0, function () {
            var data, _a, items, paging, getNextPage;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.authCall(function (sdk) { return sdk.project.getUserGroups(_this.workspace, { limit: limit }); })];
                    case 1:
                        data = _b.sent();
                        _a = data.userGroups, items = _a.items, paging = _a.paging;
                        getNextPage = function (nextUri, result) {
                            if (result === void 0) { result = []; }
                            return __awaiter(_this, void 0, void 0, function () {
                                var data, _a, items, paging, updatedResult;
                                return __generator(this, function (_b) {
                                    switch (_b.label) {
                                        case 0:
                                            if (!nextUri) {
                                                return [2 /*return*/, result];
                                            }
                                            return [4 /*yield*/, this.authCall(function (sdk) {
                                                    return sdk.xhr.getParsed(nextUri);
                                                })];
                                        case 1:
                                            data = _b.sent();
                                            _a = data.userGroups, items = _a.items, paging = _a.paging;
                                            updatedResult = __spreadArrays(result, items);
                                            nextUri = paging.next;
                                            return [2 /*return*/, getNextPage(paging.next, updatedResult)];
                                    }
                                });
                            });
                        };
                        return [2 /*return*/, getNextPage(paging.next, items)];
                }
            });
        });
    };
    BearWorkspaceUserGroupsQuery.prototype.query = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, offset, _b, limit, search, userGroups, lowercaseSearch_1, convertedUserGroups;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _a = options.offset, offset = _a === void 0 ? 0 : _a, _b = options.limit, limit = _b === void 0 ? 100 : _b, search = options.search;
                        return [4 /*yield*/, this.queryAllPages(limit)];
                    case 1:
                        userGroups = _c.sent();
                        if (search) {
                            lowercaseSearch_1 = search.toLocaleLowerCase();
                            userGroups = userGroups.filter(function (userGroup) {
                                var name = userGroup.userGroup.content.name;
                                return (name === null || name === void 0 ? void 0 : name.toLowerCase().indexOf(lowercaseSearch_1)) > -1;
                            });
                        }
                        convertedUserGroups = userGroups.map(function (userGroup) {
                            return convertWorkspaceUserGroup(userGroup.userGroup);
                        });
                        return [2 /*return*/, new InMemoryPaging(convertedUserGroups, limit, offset)];
                }
            });
        });
    };
    return BearWorkspaceUserGroupsQuery;
}());
export { BearWorkspaceUserGroupsQuery };
//# sourceMappingURL=index.js.map