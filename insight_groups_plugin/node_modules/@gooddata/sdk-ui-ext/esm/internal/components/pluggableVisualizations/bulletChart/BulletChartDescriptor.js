import { __extends } from "tslib";
import { BucketNames, getIntersectionPartAfter } from "@gooddata/sdk-ui";
import { PluggableBulletChart } from "./PluggableBulletChart";
import { BaseChartDescriptor } from "../baseChart/BaseChartDescriptor";
import { modifyBucketsAttributesForDrillDown, addIntersectionFiltersToInsight } from "../drillDownUtil";
import { drillDownFromAttributeLocalId } from "../../../utils/ImplicitDrillDownHelper";
import { executionConfigInsightConversion, filtersInsightConversion, getInsightToPropsConverter, getReactEmbeddingCodeGenerator, localeInsightConversion, multipleAttributesBucketConversion, singleAttributeOrMeasureBucketConversion, sortsInsightConversion, } from "../../../utils/embeddingCodeGenerator";
import { chartAdditionalFactories, chartConfigInsightConversion } from "../chartCodeGenUtils";
var BulletChartDescriptor = /** @class */ (function (_super) {
    __extends(BulletChartDescriptor, _super);
    function BulletChartDescriptor() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.getEmbeddingCode = getReactEmbeddingCodeGenerator({
            component: {
                importType: "named",
                name: "BulletChart",
                package: "@gooddata/sdk-ui-charts",
            },
            insightToProps: getInsightToPropsConverter({
                primaryMeasure: singleAttributeOrMeasureBucketConversion("primaryMeasure", BucketNames.MEASURES),
                targetMeasure: singleAttributeOrMeasureBucketConversion("targetMeasure", BucketNames.SECONDARY_MEASURES),
                comparativeMeasure: singleAttributeOrMeasureBucketConversion("comparativeMeasure", BucketNames.TERTIARY_MEASURES),
                viewBy: multipleAttributesBucketConversion("viewBy", BucketNames.VIEW),
                filters: filtersInsightConversion("filters"),
                sortBy: sortsInsightConversion("sortBy"),
                config: chartConfigInsightConversion("config"),
                locale: localeInsightConversion("locale"),
                execConfig: executionConfigInsightConversion("execConfig"),
            }),
            additionalFactories: chartAdditionalFactories(),
        });
        return _this;
    }
    BulletChartDescriptor.prototype.getFactory = function () {
        return function (params) { return new PluggableBulletChart(params); };
    };
    BulletChartDescriptor.prototype.applyDrillDown = function (insight, drillDownContext, backendSupportsElementUris) {
        var withFilters = this.addFiltersForBullet(insight, drillDownContext.drillDefinition, drillDownContext.event, backendSupportsElementUris);
        return modifyBucketsAttributesForDrillDown(withFilters, drillDownContext.drillDefinition);
    };
    BulletChartDescriptor.prototype.getMeta = function () {
        return {
            documentationUrl: "https://sdk.gooddata.com/gooddata-ui/docs/bullet_chart_component.html",
            supportsExport: true,
        };
    };
    BulletChartDescriptor.prototype.addFiltersForBullet = function (insight, drillConfig, event, backendSupportsElementUris) {
        var clicked = drillDownFromAttributeLocalId(drillConfig);
        var cutIntersection = getIntersectionPartAfter(event.drillContext.intersection, clicked);
        return addIntersectionFiltersToInsight(insight, cutIntersection, backendSupportsElementUris);
    };
    return BulletChartDescriptor;
}(BaseChartDescriptor));
export { BulletChartDescriptor };
//# sourceMappingURL=BulletChartDescriptor.js.map