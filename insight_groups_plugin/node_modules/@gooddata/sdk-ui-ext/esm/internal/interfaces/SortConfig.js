// (C) 2019-2022 GoodData Corporation
import { __assign, __spreadArrays } from "tslib";
import { newMeasureSort, localIdRef, } from "@gooddata/sdk-model";
function newMeasureSortSuggestion(identifier, attributeLocators) {
    if (attributeLocators === void 0) { attributeLocators = []; }
    var locators = newMeasureSort(identifier, "asc", attributeLocators).measureSortItem.locators;
    return {
        type: "measureSort",
        locators: locators,
    };
}
/**
 * @internal
 */
export var newAvailableSortsGroup = function (attributeId, measureIds, normalSortEnabled, areaSortEnabled, explanation) {
    if (measureIds === void 0) { measureIds = []; }
    if (normalSortEnabled === void 0) { normalSortEnabled = true; }
    if (areaSortEnabled === void 0) { areaSortEnabled = true; }
    var metricSortsProp = measureIds.length
        ? {
            metricSorts: __spreadArrays(measureIds.map(function (localIdentifier) { return newMeasureSortSuggestion(localIdentifier); })),
        }
        : {};
    var explanationProp = explanation
        ? {
            explanation: explanation,
        }
        : {};
    return __assign(__assign({ itemId: localIdRef(attributeId), attributeSort: {
            normalSortEnabled: normalSortEnabled,
            areaSortEnabled: areaSortEnabled,
        } }, metricSortsProp), explanationProp);
};
//# sourceMappingURL=SortConfig.js.map