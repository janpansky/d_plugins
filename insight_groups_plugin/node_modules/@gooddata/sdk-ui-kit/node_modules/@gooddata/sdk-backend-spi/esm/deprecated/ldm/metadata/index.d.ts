import * as m from "@gooddata/sdk-model";
import { IAttributeMetadataObject, isAttributeMetadataObject } from "./attribute";
import { IAttributeDisplayFormMetadataObject, isAttributeDisplayFormMetadataObject } from "./attributeDisplayForm";
import { IDashboardMetadataObject, isDashboardMetadataObject } from "./dashboard";
import { IDataSetMetadataObject, isDataSetMetadataObject } from "./dataSet";
import { IFactMetadataObject, isFactMetadataObject } from "./fact";
import { IMeasureMetadataObject, IMeasureMetadataObjectBase, IMetadataObjectDefinition, IMeasureMetadataObjectDefinition, isMeasureMetadataObject, isMeasureMetadataObjectDefinition } from "./measure";
import { IMetadataObject, IMetadataObjectBase, IMetadataObjectIdentity, isMetadataObject } from "./types";
import { isVariableMetadataObject, IVariableMetadataObject } from "./variable";
export { IMetadataObject, IMetadataObjectBase, IMetadataObjectIdentity, isMetadataObject, IAttributeMetadataObject, isAttributeMetadataObject, IAttributeDisplayFormMetadataObject, isAttributeDisplayFormMetadataObject, IFactMetadataObject, isFactMetadataObject, IMeasureMetadataObject, IMeasureMetadataObjectBase, IMetadataObjectDefinition, isMeasureMetadataObject, IMeasureMetadataObjectDefinition, isMeasureMetadataObjectDefinition, IDataSetMetadataObject, isDataSetMetadataObject, IVariableMetadataObject, isVariableMetadataObject, IDashboardMetadataObject, isDashboardMetadataObject, };
/**
 * Type that represents any metadata object
 * @deprecated Use {@link @gooddata/sdk-model#MetadataObject}
 * @public
 */
export declare type MetadataObject = m.MetadataObject;
/**
 * Get metadata object identifier
 * @deprecated Use {@link @gooddata/sdk-model#metadataObjectId}
 * @public
 */
export declare const metadataObjectId: (metadataObject: m.MetadataObject) => string;
//# sourceMappingURL=index.d.ts.map