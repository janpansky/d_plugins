// (C) 2023 GoodData Corporation
import { __read } from "tslib";
import { useEffect, useMemo, useState } from "react";
import { objRefToString } from "@gooddata/sdk-model";
import { stringUtils } from "@gooddata/util";
import isNil from "lodash/isNil";
var LOCAL_STORAGE_KEY_PREFIX = "gdc_share_dialog_admin_message_visible_";
var createLocalStorageKey = function (currentUserRef) {
    return LOCAL_STORAGE_KEY_PREFIX + stringUtils.simplifyText(objRefToString(currentUserRef));
};
var getLocalStorageValue = function (key, defaultValue) {
    var item = localStorage.getItem(key);
    var value = JSON.parse(item);
    return isNil(value) ? defaultValue : value;
};
export var useLocalStorage = function (key, defaultValue) {
    var _a = __read(useState(function () { return getLocalStorageValue(key, defaultValue); }), 2), value = _a[0], setValue = _a[1];
    useEffect(function () {
        localStorage.setItem(key, JSON.stringify(value));
    }, [key, value]);
    return [value, setValue];
};
export var useAdminInformationMessageState = function (currentUserRef) {
    var localStorageKey = useMemo(function () { return createLocalStorageKey(currentUserRef); }, [currentUserRef]);
    var _a = __read(useLocalStorage(localStorageKey, true), 2), isMessageVisible = _a[0], setIsMessageVisible = _a[1];
    var handleMessageClose = function () { return setIsMessageVisible(false); };
    return {
        isMessageVisible: isMessageVisible,
        handleMessageClose: handleMessageClose,
    };
};
//# sourceMappingURL=useAdminInformationMessage.js.map