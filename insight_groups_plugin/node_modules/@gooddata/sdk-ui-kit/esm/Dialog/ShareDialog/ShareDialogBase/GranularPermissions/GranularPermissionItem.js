// (C) 2022-2023 GoodData Corporation
import { __assign } from "tslib";
import React, { useCallback, useMemo } from "react";
import { useIntl } from "react-intl";
import cx from "classnames";
import { withBubble } from "../../../../Bubble";
import { granularPermissionMessageLabels } from "../../../../locales";
var GranularPermissionSelectItem = function (_a) {
    var permission = _a.permission, grantee = _a.grantee, selectedPermission = _a.selectedPermission, toggleDropdown = _a.toggleDropdown, handleSetSelectedPermission = _a.handleSetSelectedPermission, onChange = _a.onChange;
    var intl = useIntl();
    var handleOnChange = useCallback(function (permission) {
        toggleDropdown();
        if (permission.id !== selectedPermission) {
            handleSetSelectedPermission(permission.id);
            onChange(__assign(__assign({}, grantee), { permissions: [permission.id] }));
        }
    }, [grantee, toggleDropdown, handleSetSelectedPermission, onChange, selectedPermission]);
    var isSelected = useMemo(function () { return permission.id === selectedPermission; }, [permission, selectedPermission]);
    return (React.createElement("div", { onClick: function () {
            if (permission.enabled) {
                handleOnChange(permission);
            }
        }, className: cx("gd-list-item", "gd-menu-item", "gd-granular-permission-select-item", "s-granular-permission-item", {
            "is-disabled": !permission.enabled,
            "is-selected": isSelected,
        }) },
        React.createElement("div", null, intl.formatMessage(granularPermissionMessageLabels[permission.id]))));
};
export var GranularPermissionSelectItemWithBubble = withBubble(GranularPermissionSelectItem);
//# sourceMappingURL=GranularPermissionItem.js.map