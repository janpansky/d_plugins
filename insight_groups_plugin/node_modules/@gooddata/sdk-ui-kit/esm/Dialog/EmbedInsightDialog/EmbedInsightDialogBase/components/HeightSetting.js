// (C) 2022 GoodData Corporation
import React, { useCallback } from "react";
import { SingleSelectListItem } from "../../../../List";
import { Dropdown, DropdownButton, DropdownList } from "../../../../Dropdown";
import { NumericInput } from "./NumericInput";
import { DEFAULT_UNIT, UNITS } from "../types";
import { getDefaultHeightForEmbedCodeByUnit } from "../../utils";
/**
 * @internal
 */
export var HeightSetting = function (props) {
    var value = props.value, onValueChange = props.onValueChange, _a = props.unit, unit = _a === void 0 ? DEFAULT_UNIT : _a;
    var onChange = useCallback(function (val) {
        if (val !== value) {
            onValueChange(val, unit);
        }
    }, [value, unit, onValueChange]);
    var onUnitChange = useCallback(function (unit) {
        onValueChange(getDefaultHeightForEmbedCodeByUnit(unit), unit);
    }, [onValueChange]);
    return (React.createElement("div", { className: "height-setting-component" },
        React.createElement(NumericInput, { value: value !== null && value !== void 0 ? value : getDefaultHeightForEmbedCodeByUnit(unit), onValueChanged: onChange }),
        React.createElement(UnitSelect, { selectedUnit: unit, onSelectUnit: onUnitChange })));
};
var items = UNITS.map(function (u) { return ({ id: u, title: u }); });
var UnitSelect = function (props) {
    var selectedUnit = props.selectedUnit, onSelectUnit = props.onSelectUnit;
    return (React.createElement(Dropdown, { renderBody: function (_a) {
            var closeDropdown = _a.closeDropdown;
            return (React.createElement(DropdownList, { items: items, width: 60, renderItem: function (_a) {
                    var item = _a.item;
                    return (React.createElement(SingleSelectListItem, { title: item.title, isSelected: item.id === selectedUnit, onClick: function () {
                            onSelectUnit(item.id);
                            closeDropdown();
                        } }));
                } }));
        }, renderButton: function (_a) {
            var openDropdown = _a.openDropdown, isOpen = _a.isOpen;
            return (React.createElement(DropdownButton, { value: selectedUnit, isOpen: isOpen, onClick: openDropdown }));
        } }));
};
//# sourceMappingURL=HeightSetting.js.map