import { __extends } from "tslib";
// (C) 2007-2022 GoodData Corporation
import React, { PureComponent } from "react";
import { injectIntl, FormattedMessage } from "react-intl";
import { v4 as uuid } from "uuid";
import identity from "lodash/identity";
import cx from "classnames";
var WrappedHeaderMenu = /** @class */ (function (_super) {
    __extends(WrappedHeaderMenu, _super);
    function WrappedHeaderMenu() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WrappedHeaderMenu.prototype.getClassNames = function () {
        return cx("gd-header-menu", this.props.className);
    };
    WrappedHeaderMenu.prototype.renderSection = function (items) {
        var _this = this;
        return items.map(function (item) {
            var _a;
            var clickHandler = item.onClick
                ? item.onClick
                : function (event) { return _this.props.onMenuItemClick(item, event); };
            var classNames = cx("gd-header-menu-item gd-list-help-menu-item", (_a = {
                    active: item.isActive
                },
                _a[item.className] = !!item.className,
                _a));
            return (React.createElement("li", { key: item.key },
                React.createElement("a", { onClick: clickHandler, href: item.href, className: classNames, target: item.target, rel: item.target === "_blank" ? "noreferrer noopener" : undefined },
                    item.iconName ? React.createElement("i", { className: cx(item.iconName, "gd-icon") }) : null,
                    React.createElement("span", { className: item.className },
                        React.createElement(FormattedMessage, { id: item.key })))));
        });
    };
    WrappedHeaderMenu.prototype.renderSections = function () {
        var _this = this;
        return this.props.sections.map(function (items) {
            return (React.createElement("ul", { key: "section-" + uuid(), className: "gd-header-menu-section gd-header-measure" }, _this.renderSection(items)));
        });
    };
    WrappedHeaderMenu.prototype.render = function () {
        return React.createElement("div", { className: this.getClassNames() }, this.renderSections());
    };
    WrappedHeaderMenu.defaultProps = {
        className: "",
        onMenuItemClick: identity,
        sections: [],
    };
    return WrappedHeaderMenu;
}(PureComponent));
export var HeaderMenu = injectIntl(WrappedHeaderMenu);
//# sourceMappingURL=HeaderMenu.js.map