/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from "./configuration";
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from "axios";
import { RequestArgs, BaseAPI } from './base';
/**
 * Entity representing user in authentication system.
 * @export
 * @interface AuthUser
 */
export interface AuthUser {
    /**
     * Email - used as lookup (must be unique). For PUT method, it must be same as in URL
     * @type {string}
     * @memberof AuthUser
     */
    email: string;
    /**
     * User password. It is not returned by GET method.
     * @type {string}
     * @memberof AuthUser
     */
    password?: string;
    /**
     * User description, which will be visible in application.
     * @type {string}
     * @memberof AuthUser
     */
    displayName: string;
    /**
     * Field, which should be stored in metadata in authenticationId field. In PUT and POST method it must be not present, or equal to value calculated by backend (e.g. returned from previous GET).
     * @type {string}
     * @memberof AuthUser
     */
    authenticationId?: string;
}
/**
 *
 * @export
 * @interface FeatureFlagsContext
 */
export interface FeatureFlagsContext {
    /**
     *
     * @type {string}
     * @memberof FeatureFlagsContext
     */
    earlyAccess: string;
}
/**
 * Base Structure for feature flags
 * @export
 * @interface Features
 */
export interface Features {
    /**
     *
     * @type {FeatureFlagsContext}
     * @memberof Features
     */
    context: FeatureFlagsContext;
}
/**
 *
 * @export
 * @interface Invitation
 */
export interface Invitation {
    /**
     *
     * @type {string}
     * @memberof Invitation
     */
    email: string;
}
/**
 *
 * @export
 * @interface LiveFeatureFlagConfiguration
 */
export interface LiveFeatureFlagConfiguration {
    /**
     *
     * @type {string}
     * @memberof LiveFeatureFlagConfiguration
     */
    host: string;
    /**
     *
     * @type {string}
     * @memberof LiveFeatureFlagConfiguration
     */
    key: string;
}
/**
 * Structure for featureHub
 * @export
 * @interface LiveFeatures
 */
export interface LiveFeatures {
    /**
     *
     * @type {FeatureFlagsContext}
     * @memberof LiveFeatures
     */
    context: FeatureFlagsContext;
    /**
     *
     * @type {LiveFeatureFlagConfiguration}
     * @memberof LiveFeatures
     */
    configuration: LiveFeatureFlagConfiguration;
}
/**
 *
 * @export
 * @interface LiveFeaturesAllOf
 */
export interface LiveFeaturesAllOf {
    /**
     *
     * @type {LiveFeatureFlagConfiguration}
     * @memberof LiveFeaturesAllOf
     */
    configuration?: LiveFeatureFlagConfiguration;
}
/**
 *
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    organizationId: string;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    organizationName: string;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    name?: string;
    /**
     *
     * @type {string}
     * @memberof Profile
     */
    userId: string;
    /**
     *
     * @type {Telemetry}
     * @memberof Profile
     */
    telemetry?: Telemetry;
    /**
     *
     * @type {ProfileLinks}
     * @memberof Profile
     */
    links: ProfileLinks;
    /**
     *
     * @type {LiveFeatures | StaticFeatures}
     * @memberof Profile
     */
    features: LiveFeatures | StaticFeatures;
}
/**
 *
 * @export
 * @interface ProfileLinks
 */
export interface ProfileLinks {
    /**
     *
     * @type {string}
     * @memberof ProfileLinks
     */
    self: string;
    /**
     *
     * @type {string}
     * @memberof ProfileLinks
     */
    organization: string;
    /**
     *
     * @type {string}
     * @memberof ProfileLinks
     */
    user: string;
}
/**
 * Structure for offline feature flag
 * @export
 * @interface StaticFeatures
 */
export interface StaticFeatures {
    /**
     *
     * @type {FeatureFlagsContext}
     * @memberof StaticFeatures
     */
    context: FeatureFlagsContext;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof StaticFeatures
     */
    items: {
        [key: string]: string;
    };
}
/**
 *
 * @export
 * @interface StaticFeaturesAllOf
 */
export interface StaticFeaturesAllOf {
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof StaticFeaturesAllOf
     */
    items?: {
        [key: string]: string;
    };
}
/**
 *
 * @export
 * @interface Telemetry
 */
export interface Telemetry {
    /**
     *
     * @type {string}
     * @memberof Telemetry
     */
    host: string;
    /**
     *
     * @type {number}
     * @memberof Telemetry
     */
    siteId: number;
    /**
     *
     * @type {string}
     * @memberof Telemetry
     */
    deploymentId: string;
    /**
     *
     * @type {string}
     * @memberof Telemetry
     */
    organizationHash: string;
    /**
     *
     * @type {string}
     * @memberof Telemetry
     */
    userHash: string;
}
/**
 * ActionsApi - axios parameter creator
 * @export
 */
export declare const ActionsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Puts a new invitation requirement into the invitation generator queue.
     * @param {Invitation} invitation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processInvitation: (invitation: Invitation, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ActionsApi - functional programming interface
 * @export
 */
export declare const ActionsApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @summary Puts a new invitation requirement into the invitation generator queue.
     * @param {Invitation} invitation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processInvitation(invitation: Invitation, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
};
/**
 * ActionsApi - factory interface
 * @export
 */
export declare const ActionsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @summary Puts a new invitation requirement into the invitation generator queue.
     * @param {ActionsApiProcessInvitationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    processInvitation(requestParameters: ActionsApiProcessInvitationRequest, options?: AxiosRequestConfig | undefined): AxiosPromise<void>;
};
/**
 * ActionsApi - interface
 * @export
 * @interface ActionsApi
 */
export interface ActionsApiInterface {
    /**
     *
     * @summary Puts a new invitation requirement into the invitation generator queue.
     * @param {ActionsApiProcessInvitationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActionsApiInterface
     */
    processInvitation(requestParameters: ActionsApiProcessInvitationRequest, options?: AxiosRequestConfig): AxiosPromise<void>;
}
/**
 * Request parameters for processInvitation operation in ActionsApi.
 * @export
 * @interface ActionsApiProcessInvitationRequest
 */
export interface ActionsApiProcessInvitationRequest {
    /**
     *
     * @type {Invitation}
     * @memberof ActionsApiProcessInvitation
     */
    readonly invitation: Invitation;
}
/**
 * ActionsApi - object-oriented interface
 * @export
 * @class ActionsApi
 * @extends {BaseAPI}
 */
export declare class ActionsApi extends BaseAPI implements ActionsApiInterface {
    /**
     *
     * @summary Puts a new invitation requirement into the invitation generator queue.
     * @param {ActionsApiProcessInvitationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ActionsApi
     */
    processInvitation(requestParameters: ActionsApiProcessInvitationRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
}
/**
 * AuthenticationApi - axios parameter creator
 * @export
 */
export declare const AuthenticationApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {AuthUser} authUser
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createUser: (authUser: AuthUser, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} userEmail
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteUser: (userEmail: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProfile: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} userEmail
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUser: (userEmail: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUsers: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} userEmail
     * @param {AuthUser} authUser
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUser: (userEmail: string, authUser: AuthUser, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AuthenticationApi - functional programming interface
 * @export
 */
export declare const AuthenticationApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {AuthUser} authUser
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createUser(authUser: AuthUser, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<AuthUser>>;
    /**
     *
     * @param {string} userEmail
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteUser(userEmail: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProfile(options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Profile>>;
    /**
     *
     * @param {string} userEmail
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUser(userEmail: string, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<AuthUser>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUsers(options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<AuthUser>>>;
    /**
     *
     * @param {string} userEmail
     * @param {AuthUser} authUser
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUser(userEmail: string, authUser: AuthUser, options?: AxiosRequestConfig | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<AuthUser>>;
};
/**
 * AuthenticationApi - factory interface
 * @export
 */
export declare const AuthenticationApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {AuthenticationApiCreateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createUser(requestParameters: AuthenticationApiCreateUserRequest, options?: AxiosRequestConfig | undefined): AxiosPromise<AuthUser>;
    /**
     *
     * @param {AuthenticationApiDeleteUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteUser(requestParameters: AuthenticationApiDeleteUserRequest, options?: AxiosRequestConfig | undefined): AxiosPromise<void>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getProfile(options?: AxiosRequestConfig | undefined): AxiosPromise<Profile>;
    /**
     *
     * @param {AuthenticationApiGetUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUser(requestParameters: AuthenticationApiGetUserRequest, options?: AxiosRequestConfig | undefined): AxiosPromise<AuthUser>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUsers(options?: AxiosRequestConfig | undefined): AxiosPromise<Array<AuthUser>>;
    /**
     *
     * @param {AuthenticationApiUpdateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateUser(requestParameters: AuthenticationApiUpdateUserRequest, options?: AxiosRequestConfig | undefined): AxiosPromise<AuthUser>;
};
/**
 * AuthenticationApi - interface
 * @export
 * @interface AuthenticationApi
 */
export interface AuthenticationApiInterface {
    /**
     *
     * @param {AuthenticationApiCreateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    createUser(requestParameters: AuthenticationApiCreateUserRequest, options?: AxiosRequestConfig): AxiosPromise<AuthUser>;
    /**
     *
     * @param {AuthenticationApiDeleteUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    deleteUser(requestParameters: AuthenticationApiDeleteUserRequest, options?: AxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    getProfile(options?: AxiosRequestConfig): AxiosPromise<Profile>;
    /**
     *
     * @param {AuthenticationApiGetUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    getUser(requestParameters: AuthenticationApiGetUserRequest, options?: AxiosRequestConfig): AxiosPromise<AuthUser>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    getUsers(options?: AxiosRequestConfig): AxiosPromise<Array<AuthUser>>;
    /**
     *
     * @param {AuthenticationApiUpdateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApiInterface
     */
    updateUser(requestParameters: AuthenticationApiUpdateUserRequest, options?: AxiosRequestConfig): AxiosPromise<AuthUser>;
}
/**
 * Request parameters for createUser operation in AuthenticationApi.
 * @export
 * @interface AuthenticationApiCreateUserRequest
 */
export interface AuthenticationApiCreateUserRequest {
    /**
     *
     * @type {AuthUser}
     * @memberof AuthenticationApiCreateUser
     */
    readonly authUser: AuthUser;
}
/**
 * Request parameters for deleteUser operation in AuthenticationApi.
 * @export
 * @interface AuthenticationApiDeleteUserRequest
 */
export interface AuthenticationApiDeleteUserRequest {
    /**
     *
     * @type {string}
     * @memberof AuthenticationApiDeleteUser
     */
    readonly userEmail: string;
}
/**
 * Request parameters for getUser operation in AuthenticationApi.
 * @export
 * @interface AuthenticationApiGetUserRequest
 */
export interface AuthenticationApiGetUserRequest {
    /**
     *
     * @type {string}
     * @memberof AuthenticationApiGetUser
     */
    readonly userEmail: string;
}
/**
 * Request parameters for updateUser operation in AuthenticationApi.
 * @export
 * @interface AuthenticationApiUpdateUserRequest
 */
export interface AuthenticationApiUpdateUserRequest {
    /**
     *
     * @type {string}
     * @memberof AuthenticationApiUpdateUser
     */
    readonly userEmail: string;
    /**
     *
     * @type {AuthUser}
     * @memberof AuthenticationApiUpdateUser
     */
    readonly authUser: AuthUser;
}
/**
 * AuthenticationApi - object-oriented interface
 * @export
 * @class AuthenticationApi
 * @extends {BaseAPI}
 */
export declare class AuthenticationApi extends BaseAPI implements AuthenticationApiInterface {
    /**
     *
     * @param {AuthenticationApiCreateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApi
     */
    createUser(requestParameters: AuthenticationApiCreateUserRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AuthUser>>;
    /**
     *
     * @param {AuthenticationApiDeleteUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApi
     */
    deleteUser(requestParameters: AuthenticationApiDeleteUserRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApi
     */
    getProfile(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Profile>>;
    /**
     *
     * @param {AuthenticationApiGetUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApi
     */
    getUser(requestParameters: AuthenticationApiGetUserRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AuthUser>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApi
     */
    getUsers(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AuthUser[]>>;
    /**
     *
     * @param {AuthenticationApiUpdateUserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthenticationApi
     */
    updateUser(requestParameters: AuthenticationApiUpdateUserRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AuthUser>>;
}
//# sourceMappingURL=api.d.ts.map