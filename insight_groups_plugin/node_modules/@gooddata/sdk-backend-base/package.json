{
  "name": "@gooddata/sdk-backend-base",
  "version": "8.12.0",
  "author": "GoodData",
  "description": "GoodData.UI SDK - Base for backend implementations",
  "repository": {
    "type": "git",
    "url": "https://github.com/gooddata/gooddata-ui-sdk.git",
    "directory": "libs/sdk-backend-base"
  },
  "license": "MIT",
  "main": "dist/index.js",
  "module": "esm/index.js",
  "es2015": "esm/index.js",
  "browser": "dist/index.js",
  "typings": "esm/index.d.ts",
  "sideEffects": false,
  "files": [
    "dist/**/*.js",
    "dist/**/*.json",
    "dist/**/*.d.ts",
    "dist/**/*.map",
    "esm/**/*.js",
    "esm/**/*.json",
    "esm/**/*.d.ts",
    "esm/**/*.map"
  ],
  "config": {
    "eslint": "-c .eslintrc.js --ext ts src/"
  },
  "dependencies": {
    "@braintree/sanitize-url": "^6.0.0",
    "@gooddata/sdk-backend-spi": "^8.12.0",
    "@gooddata/sdk-model": "^8.12.0",
    "@gooddata/util": "^8.12.0",
    "json-stable-stringify": "^1.0.1",
    "lodash": "^4.17.19",
    "spark-md5": "^3.0.0",
    "ts-invariant": "^0.7.3",
    "tslib": "^2.0.0",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@gooddata/eslint-config": "^4.1.0",
    "@gooddata/reference-workspace": "^8.12.0",
    "@microsoft/api-documenter": "^7.17.0",
    "@microsoft/api-extractor": "^7.20.0",
    "@types/jest": "^27.0.1",
    "@types/json-stable-stringify": "^1.0.32",
    "@types/lodash": "^4.14.158",
    "@types/spark-md5": "^3.0.1",
    "@types/uuid": "^8.3.4",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "concurrently": "^6.0.2",
    "dependency-cruiser": "^10.1.1",
    "eslint": "^8.25.0",
    "eslint-plugin-header": "^3.0.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-jest": "^27.1.1",
    "eslint-plugin-no-only-tests": "^2.4.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-regexp": "^1.9.0",
    "eslint-plugin-sonarjs": "^0.16.0",
    "eslint-plugin-tsdoc": "^0.2.14",
    "jest": "^27.5.1",
    "jest-junit": "^3.0.0",
    "prettier": "~2.5.0",
    "ts-jest": "^27.0.5",
    "typescript": "4.0.2"
  },
  "scripts": {
    "clean": "rm -rf ci dist esm coverage *.log && jest --clearCache",
    "dev": "tsc -p tsconfig.dev.json --watch",
    "build": "concurrently \"npm run build-cjs\" \"npm run build-esm\" && npm run api-extractor",
    "build-cjs": "tsc -p tsconfig.build.json",
    "build-esm": "tsc -p tsconfig.build.esm.json",
    "api-extractor": "mkdir -p api && [ -z \"${CI}\" ] && (api-extractor run -l) || (api-extractor run)",
    "test": "jest --watch",
    "test-once": "jest --maxWorkers=${JEST_MAX_WORKERS:-'45%'}",
    "test-ci": "JEST_JUNIT_OUTPUT=./ci/results/test-results.xml jest --ci --config jest.ci.js",
    "eslint": "eslint $npm_package_config_eslint",
    "eslint-ci": "mkdir -p ./ci/results && eslint -f checkstyle -o ci/results/eslint-results.xml $npm_package_config_eslint",
    "prettier-check": "prettier --check '{src,test}/**/*.{ts,tsx,json,scss,md,yaml,html}'",
    "prettier-write": "prettier --write '{src,test}/**/*.{ts,tsx,json,scss,md,yaml,html}'",
    "dep-cruiser": "depcruise --validate .dependency-cruiser.js --output-type err-long src/",
    "dep-cruiser-ci": "depcruise --validate .dependency-cruiser.js --output-type err-long src/",
    "validate": "npm run dep-cruiser && npm run eslint && npm run prettier-check",
    "validate-ci": "npm run dep-cruiser-ci && npm run eslint-ci && npm run prettier-check"
  },
  "readme": "# Analytical Backend SPI - infrastructure and foundations\n\n[![npm version](https://img.shields.io/npm/v/@gooddata/sdk-backend-base)](https://www.npmjs.com/@gooddata/sdk-backend-base)&nbsp;\n[![npm monthly downloads](https://img.shields.io/npm/dm/@gooddata/sdk-backend-base)](https://npmcharts.com/compare/@gooddata/sdk-backend-base?minimal=true)&nbsp;\n![typescript](https://img.shields.io/badge/typescript-first-blue?logo=typescript)\n\nThis package is a part of the [GoodData.UI SDK](https://sdk.gooddata.com/gooddata-ui/docs/about_gooddataui.html).\nTo learn more, check [the source monorepo](https://github.com/gooddata/gooddata-ui-sdk).\n\nThis package contains foundational, reusable code useful for building new or decorating existing\n[Analytical Backend](https://www.npmjs.com/package/@gooddata/sdk-backend-spi) implementations. This is lower-level, infrastructural code which may be useful\nwhen building larger, more complex applications.\n\nThe notable contents of this package are documented below.\n\n## Backend Decorators\n\nLow level infrastructure to build your own Analytical Backend decorators. The decorators are used\nto seamlessly enrich existing backend implementation with additional functionality - without\nthe need to touch the backend implementation itself.\n\nSee code comments in [base classes](src/decoratedBackend/index.ts) for further documentation on how\nto create your own decorators. Or additionally look at existing decorator implementations for\ninspiration.\n\n## Eventing Backend\n\nThis decorator allows you to enhance any backend implementation with support for eventing. The eventing\nis at the moment limited to the execution part of the Analytical Backend SPI.\n\nBackend decorated with eventing can be created as follows:\n\n```typescript\nimport { IAnalyticalBackend } from \"@gooddata/sdk-backend-spi\";\nimport { IExecutionDefinition, IDataView } from \"@gooddata/sdk-model\";\nimport { withEventing } from \"@gooddata/sdk-backend-base\";\n\nconst realBackendImplementation = ...;\nconst enhancedBackend: IAnalyticalBackend = withEventing(realBackendImplementation, {\n    beforeExecute: (def: IExecutionDefinition) => {\n        console.log(\"about to trigger execution with definition:\", def);\n    },\n    successfulResultReadAll: (dataView: IDataView) => {\n        console.log(\"retrieved all data for backend execution\");\n    }\n});\n```\n\nYou can then pass the `enhancedBackend` to the various React components offered by the SDK and be\nnotified.\n\n## Normalizing Backend\n\nThis decorator addresses the fact that two execution definitions may lead semantically same results but differ just\nin view-only details or technicalities. Before the execution is sent to the underlying backend this decorator will:\n\n-   Strip alias, measure format and title from measures\n-   Strip alias from attributes\n-   Remove any noop filters\n-   Normalize local identifiers\n\nThe normalized execution is sent to the backend and before the results and data are passed back to the caller code,\nthe decorator performs denormalization and restores the original values all in the right places in the result and\ndata structures. To the caller, all of this optimization remains transparent and everything looks like the original\nexecution actually executed.\n\n```typescript\nimport { IAnalyticalBackend } from \"@gooddata/sdk-backend-spi\";\nimport { withNormalization } from \"@gooddata/sdk-backend-base\";\n\nconst realBackendImplementation = ...;\nconst enhancedBackend: IAnalyticalBackend = withNormalization(realBackendImplementation);\n```\n\n## Caching Backend\n\nThis decorator implements a naive client-side execution result caching with bounded cache size.\nThe execution results will be evicted only if cache limits are reached using LRU policy. Browser ‘Refresh’ cleans the cache.\n\nIf your app must deliver a snappy experience without too many loading indicators AND the data freshness is not a\ncritical requirement, then this decorator can speed your application immensely.\n\n```typescript\nimport { IAnalyticalBackend } from \"@gooddata/sdk-backend-spi\";\nimport { withCaching, RecommendedCachingConfiguration } from \"@gooddata/sdk-backend-base\";\n\nconst realBackendImplementation = ...;\nconst enhancedBackend: IAnalyticalBackend = withCaching(realBackendImplementation, RecommendedCachingConfiguration);\n```\n\nThe withCaching accepts configuration which you need to use to tweak the size of the different caches. You can use RecommendedCachingConfiguration\navailable in this package.\n\nThe caching plays well with normalization:\n\n```typescript\nimport { IAnalyticalBackend } from \"@gooddata/sdk-backend-spi\";\nimport { withCaching, withNormalization, RecommendedCachingConfiguration } from \"@gooddata/sdk-backend-base\";\n\nconst realBackendImplementation = ...;\nconst enhancedBackend: IAnalyticalBackend = withNormalization(withCaching(realBackendImplementation, RecommendedCachingConfiguration));\n```\n\nThis way the normalization first wipes any differences that are unimportant for the backend, effectively dispatching\njust the really unique executions to the underlying backend - the caching decorator. This greatly increases client-side\ncache hits for applications that dynamically change view-only properties of LDM objects.\n\n## License\n\n(C) 2017-2022 GoodData Corporation\n\nThis project is under MIT License. See [LICENSE](https://github.com/gooddata/gooddata-ui-sdk/blob/master/libs/sdk-backend-base/LICENSE).\n"
}