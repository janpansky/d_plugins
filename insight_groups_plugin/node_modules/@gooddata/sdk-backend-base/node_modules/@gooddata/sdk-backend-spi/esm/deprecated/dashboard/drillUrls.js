// (C) 2022 GoodData Corporation
import { idRef, isIdentifierRef } from "@gooddata/sdk-model";
import isString from "lodash/isString";
function matchAll(regex, text) {
    var matches = [];
    var match = null;
    while ((match = regex.exec(text)) !== null) {
        matches.push(match);
    }
    return matches;
}
var identifierSplitRegexp = /(\{attribute_title\(.*?\)\})/g;
var identifierMatchRegexp = /\{attribute_title\((.*?)\)\}/g;
var identifierToPlaceholder = function (ref) { return "{attribute_title(" + ref.identifier + ")}"; };
var matchToUrlPlaceholder = function (match) { return ({
    placeholder: match[0],
    identifier: match[1],
    ref: idRef(match[1], "displayForm"),
    toBeEncoded: match.index !== 0,
}); };
var splitUrl = function (url) { return url.split(identifierSplitRegexp); };
/**
 * @internal
 */
export var splitDrillUrlParts = function (url) {
    return splitUrl(url).map(function (urlPart) {
        var match = identifierMatchRegexp.exec(urlPart);
        if (match !== null) {
            return matchToUrlPlaceholder(match).ref;
        }
        return urlPart;
    });
};
/**
 * @internal
 */
export var joinDrillUrlParts = function (parts) {
    // Back compatibility
    if (isString(parts)) {
        return parts;
    }
    return parts
        .map(function (urlPart) {
        if (isIdentifierRef(urlPart)) {
            return identifierToPlaceholder(urlPart);
        }
        return urlPart;
    })
        .join("");
};
/**
 * @internal
 */
export var getAttributeIdentifiersPlaceholdersFromUrl = function (url) {
    return matchAll(identifierMatchRegexp, url).map(matchToUrlPlaceholder);
};
//# sourceMappingURL=drillUrls.js.map