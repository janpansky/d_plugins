// (C) 2021-2023 GoodData Corporation
import React from "react";
import classNames from "classnames";
import { stringUtils } from "@gooddata/util";
import { ShortenedText } from "@gooddata/sdk-ui-kit";
var getDisplayFormIcon = function (type) {
    switch (type) {
        case "GDC.link":
            return "gd-icon-hyperlink-warning";
        case "GDC.geo.pin":
        case "GDC.geo.pin_latitude":
        case "GDC.geo.pin_longitude":
            return "gd-icon-earth";
        default:
            return "gd-icon-label-warning";
    }
};
var tooltipAlignPoints = [
    { align: "cl cr", offset: { x: -10, y: 0 } },
    { align: "cr cl", offset: { x: 10, y: 0 } },
];
/**
 * @internal
 */
export var AttributeDisplayFormSelectItem = function (props) {
    var displayForm = props.displayForm, selected = props.selected;
    var title = displayForm.title, type = displayForm.type;
    var className = classNames("gd-list-item", "gd-attribute-display-form", "s-attribute-display-form-name", "s-attribute-display-form-name-" + stringUtils.simplifyText(title), getDisplayFormIcon(type), {
        "is-selected": selected,
    });
    var handleOnClick = function (e) {
        var displayForm = props.displayForm, onClick = props.onClick;
        onClick(displayForm.ref);
        e.preventDefault();
    };
    return (React.createElement("div", { className: className, onClick: handleOnClick },
        React.createElement(ShortenedText, { className: "gd-attribute-display-form-name", tooltipAlignPoints: tooltipAlignPoints }, title)));
};
//# sourceMappingURL=AttributeDisplayFormSelectItem.js.map