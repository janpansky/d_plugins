import React from "react";
import { WrappedComponentProps } from "react-intl";
interface IDateTimePickerOwnProps {
    placeholderDate: string;
    dateFormat: string;
    onChange: (value: Date) => void;
    value: Date;
    handleDayClick: () => void;
    isMobile: boolean;
    isTimeEnabled: boolean;
    className: string;
    onKeyDown: (e: React.KeyboardEvent<HTMLInputElement>) => void;
    defaultTime?: string;
    error?: boolean;
}
declare type DateTimePickerComponentProps = IDateTimePickerOwnProps & WrappedComponentProps;
declare const DateTimePickerWithInt: React.ForwardRefExoticComponent<Pick<import("react-intl").WithIntlProps<React.PropsWithChildren<IDateTimePickerOwnProps & WrappedComponentProps<"intl"> & React.RefAttributes<HTMLInputElement>>>, "children" | "key" | "value" | "error" | "className" | "onChange" | "dateFormat" | "onKeyDown" | "isMobile" | "forwardedRef" | "placeholderDate" | "handleDayClick" | "isTimeEnabled" | "defaultTime"> & React.RefAttributes<any>> & {
    WrappedComponent: React.ComponentType<IDateTimePickerOwnProps & WrappedComponentProps<"intl"> & React.RefAttributes<HTMLInputElement>>;
};
export { DateTimePickerWithInt, DateTimePickerComponentProps };
//# sourceMappingURL=DateTimePicker.d.ts.map