// (C) 2019-2022 GoodData Corporation
import moment from "moment";
import isString from "lodash/isString";
import isDate from "lodash/isDate";
import { platformDateFormat, platformDateTimeFormat } from "../constants/Platform";
export var convertDateToPlatformDateString = function (date, dateFormat) {
    if (dateFormat === void 0) { dateFormat = platformDateFormat; }
    return (isDate(date) ? moment(date).local().format(dateFormat) : date);
};
export var convertPlatformDateStringToDate = function (platformDate) {
    if (!isString(platformDate)) {
        return platformDate;
    }
    /**
     * Create date object with correct day from string
     * Example: "2019-11-28" with local time zone is GTM-0600
     *   local time is "2019-11-27T18:00:00 GTM-0600"
     *   after converting the local time will be "2019-11-28T00:00:00 GTM-0600"
     *
     * Example: "2019-11-28" with local time zone is GTM+0600
     *   local time is "2019-11-28T06:00:00 GTM+0600"
     *   after converting the local time will be "2019-11-28T00:00:00 GTM+0600"
     */
    // unfortunately moment does not correctly export date via toDate method (always uses system time)
    // therefore it needs to be created via standard Date object to satisfy unit tests
    return new Date(moment(platformDate, platformDateTimeFormat).format());
};
//# sourceMappingURL=DateConversions.js.map