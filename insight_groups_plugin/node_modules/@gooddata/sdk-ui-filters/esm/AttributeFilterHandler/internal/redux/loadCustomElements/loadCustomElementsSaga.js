import { __assign, __generator } from "tslib";
import { race, put, call, take, takeEvery, cancelled } from "redux-saga/effects";
import { elementsSaga } from "../elements/elementsSaga";
import { actions } from "../store/slice";
/**
 * @internal
 */
export function loadCustomElementsWorker() {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, takeEvery([actions.loadCustomElementsRequest.match], loadCustomElementsSaga)];
            case 1:
                _a.sent();
                return [2 /*return*/];
        }
    });
}
/**
 * @internal
 */
export function loadCustomElementsSaga(action) {
    var _a, correlation, options, _b, result, canceled, anotherRequest, error_1;
    return __generator(this, function (_c) {
        switch (_c.label) {
            case 0:
                _a = action.payload, correlation = _a.correlation, options = _a.options;
                _c.label = 1;
            case 1:
                _c.trys.push([1, 8, 10, 14]);
                return [4 /*yield*/, put(actions.loadCustomElementsStart({ correlation: correlation }))];
            case 2:
                _c.sent();
                return [4 /*yield*/, race({
                        result: call(elementsSaga, options),
                        anotherRequest: take(function (a) {
                            return actions.loadCustomElementsRequest.match(a) &&
                                (correlation ? a.payload.correlation === correlation : true);
                        }),
                        canceled: take(function (a) {
                            return actions.loadCustomElementsCancelRequest.match(a) &&
                                (correlation ? a.payload.correlation === correlation : true);
                        }),
                    })];
            case 3:
                _b = _c.sent(), result = _b.result, canceled = _b.canceled, anotherRequest = _b.anotherRequest;
                if (!result) return [3 /*break*/, 5];
                return [4 /*yield*/, put(actions.loadCustomElementsSuccess(__assign(__assign({}, result), { correlation: correlation })))];
            case 4:
                _c.sent();
                return [2 /*return*/, result];
            case 5:
                if (!(canceled || anotherRequest)) return [3 /*break*/, 7];
                return [4 /*yield*/, put(actions.loadCustomElementsCancel({ correlation: correlation }))];
            case 6:
                _c.sent();
                _c.label = 7;
            case 7: return [3 /*break*/, 14];
            case 8:
                error_1 = _c.sent();
                return [4 /*yield*/, put(actions.loadCustomElementsError({
                        error: error_1,
                        correlation: correlation,
                    }))];
            case 9:
                _c.sent();
                return [3 /*break*/, 14];
            case 10: return [4 /*yield*/, cancelled()];
            case 11:
                if (!_c.sent()) return [3 /*break*/, 13];
                return [4 /*yield*/, put(actions.loadCustomElementsCancel({ correlation: correlation }))];
            case 12:
                _c.sent();
                _c.label = 13;
            case 13: return [7 /*endfinally*/];
            case 14: return [2 /*return*/];
        }
    });
}
//# sourceMappingURL=loadCustomElementsSaga.js.map