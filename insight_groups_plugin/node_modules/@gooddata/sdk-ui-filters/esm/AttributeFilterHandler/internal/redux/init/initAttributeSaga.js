import { __generator } from "tslib";
import { fork, take, race } from "redux-saga/effects";
import { loadAttributeSaga } from "../loadAttribute/loadAttributeSaga";
import { actions } from "../store/slice";
/**
 * @internal
 */
export function initAttributeSaga(correlation) {
    var error;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, fork(loadAttributeSaga, actions.loadAttributeRequest({ correlation: correlation }))];
            case 1:
                _a.sent();
                return [4 /*yield*/, race({
                        success: take(function (a) { return actions.loadAttributeSuccess.match(a) && a.payload.correlation === correlation; }),
                        error: take(function (a) { return actions.loadAttributeError.match(a) && a.payload.correlation === correlation; }),
                        cancel: take(function (a) { return actions.loadAttributeCancel.match(a) && a.payload.correlation === correlation; }),
                    })];
            case 2:
                error = (_a.sent()).error;
                if (error) {
                    throw error.payload.error;
                }
                return [2 /*return*/];
        }
    });
}
//# sourceMappingURL=initAttributeSaga.js.map