import isNil from "lodash/isNil";
import { selectCommittedSelection, selectIsCommittedSelectionInverted, selectIsWorkingSelectionInverted, selectWorkingSelection, } from "./selectionSelectors";
var changeSelection = function (state, action) {
    state.selection.working.keys = action.payload.selection;
    if (!isNil(action.payload.isInverted)) {
        state.selection.working.isInverted = action.payload.isInverted;
    }
};
var revertSelection = function (state) {
    var committedSelection = selectCommittedSelection(state);
    var isCommittedSelectionInverted = selectIsCommittedSelectionInverted(state);
    state.selection.working.keys = committedSelection;
    state.selection.working.isInverted = isCommittedSelectionInverted;
};
var commitSelection = function (state) {
    var workingSelection = selectWorkingSelection(state);
    var isWorkingSelectionInverted = selectIsWorkingSelectionInverted(state);
    state.selection.commited.keys = workingSelection;
    state.selection.commited.isInverted = isWorkingSelectionInverted;
};
var invertSelection = function (state) {
    var isWorkingSelectionInverted = selectIsWorkingSelectionInverted(state);
    state.selection.working.isInverted = !isWorkingSelectionInverted;
};
var clearSelection = function (state) {
    state.selection.working.keys = [];
};
/**
 * @internal
 */
export var selectionReducers = {
    changeSelection: changeSelection,
    revertSelection: revertSelection,
    commitSelection: commitSelection,
    invertSelection: invertSelection,
    clearSelection: clearSelection,
};
//# sourceMappingURL=selectionReducers.js.map