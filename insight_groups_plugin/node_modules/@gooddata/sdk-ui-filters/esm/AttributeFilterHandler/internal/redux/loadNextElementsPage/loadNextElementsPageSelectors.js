import { __assign } from "tslib";
// (C) 2021-2022 GoodData Corporation
import { createSelector } from "@reduxjs/toolkit";
import isEqual from "lodash/isEqual";
import omit from "lodash/omit";
import { selectState } from "../common/selectors";
import { selectElementsTotalCount, selectLastLoadedElementsOptions, selectLoadElementsOptions, } from "../elements/elementsSelectors";
/**
 * @internal
 */
export var selectLoadNextElementsPageStatus = createSelector(selectState, function (state) { return state.elements.nextPageLoad.status; });
/**
 * @internal
 */
export var selectLoadNextElementsPageError = createSelector(selectState, function (state) { return state.elements.nextPageLoad.error; });
/**
 * @internal
 */
export var selectLoadNextElementsPageOptions = createSelector(selectLastLoadedElementsOptions, function (options) {
    return __assign(__assign({}, options), { offset: options.offset + options.limit });
});
/**
 * @internal
 */
export var selectHasNextPage = createSelector(selectLastLoadedElementsOptions, selectElementsTotalCount, function (lastLoadedOptions, totalCount) {
    return lastLoadedOptions.offset + lastLoadedOptions.limit < totalCount;
});
/**
 * @internal
 */
export var selectIsLoadElementsOptionsChanged = createSelector(selectLoadElementsOptions, selectLastLoadedElementsOptions, function (loadOptions, lastLoadedOptions) {
    return !isEqual(omit(loadOptions, "offset", "excludePrimaryLabel"), omit(lastLoadedOptions, "offset", "excludePrimaryLabel"));
});
//# sourceMappingURL=loadNextElementsPageSelectors.js.map