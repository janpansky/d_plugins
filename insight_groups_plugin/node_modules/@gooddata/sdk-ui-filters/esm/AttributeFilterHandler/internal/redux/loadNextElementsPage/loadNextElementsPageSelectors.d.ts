import { ILoadElementsOptions } from "../../../types";
/**
 * @internal
 */
export declare const selectLoadNextElementsPageStatus: import("@reduxjs/toolkit").OutputSelector<import("..").AttributeFilterState, import("../../../types").AsyncOperationStatus, (res: import("..").AttributeFilterState) => import("../../../types").AsyncOperationStatus>;
/**
 * @internal
 */
export declare const selectLoadNextElementsPageError: import("@reduxjs/toolkit").OutputSelector<import("..").AttributeFilterState, import("@gooddata/sdk-ui").GoodDataSdkError, (res: import("..").AttributeFilterState) => import("@gooddata/sdk-ui").GoodDataSdkError>;
/**
 * @internal
 */
export declare const selectLoadNextElementsPageOptions: import("@reduxjs/toolkit").OutputSelector<import("..").AttributeFilterState, ILoadElementsOptions, (res: ILoadElementsOptions) => ILoadElementsOptions>;
/**
 * @internal
 */
export declare const selectHasNextPage: import("@reduxjs/toolkit").OutputSelector<import("..").AttributeFilterState, boolean, (res1: ILoadElementsOptions, res2: number) => boolean>;
/**
 * @internal
 */
export declare const selectIsLoadElementsOptionsChanged: import("@reduxjs/toolkit").OutputSelector<import("..").AttributeFilterState, boolean, (res1: ILoadElementsOptions, res2: ILoadElementsOptions) => boolean>;
//# sourceMappingURL=loadNextElementsPageSelectors.d.ts.map