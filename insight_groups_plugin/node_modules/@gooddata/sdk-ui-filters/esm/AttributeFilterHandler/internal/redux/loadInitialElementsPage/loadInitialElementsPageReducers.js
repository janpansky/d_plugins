import identity from "lodash/identity";
import { getElementCacheKey } from "../common/selectors";
var loadInitialElementsPageRequest = identity;
var loadInitialElementsPageStart = function (state) {
    state.elements.initialPageLoad.status = "loading";
    state.elements.initialPageLoad.error = undefined;
    state.elements.currentOptions.offset = 0;
    state.elements.lastLoadedOptions.offset = 0;
    state.elements.data = [];
};
var loadInitialElementsPageSuccess = function (state, action) {
    state.elements.initialPageLoad.status = "success";
    state.elements.totalCountWithCurrentSettings = action.payload.totalCount;
    action.payload.elements.forEach(function (el) {
        var cacheKey = getElementCacheKey(state, el);
        if (!state.elements.cache[cacheKey]) {
            state.elements.cache[cacheKey] = el;
        }
    });
    state.elements.data = action.payload.elements.map(function (el) { return getElementCacheKey(state, el); });
    state.elements.lastLoadedOptions = action.payload.options;
};
var loadInitialElementsPageError = function (state, action) {
    state.elements.initialPageLoad.status = "error";
    state.elements.initialPageLoad.error = action.payload.error;
};
var loadInitialElementsPageCancelRequest = identity;
var loadInitialElementsPageCancel = function (state) {
    state.attribute.status = "canceled";
};
/**
 * @internal
 */
export var loadInitialElementsPageReducers = {
    loadInitialElementsPageRequest: loadInitialElementsPageRequest,
    loadInitialElementsPageStart: loadInitialElementsPageStart,
    loadInitialElementsPageSuccess: loadInitialElementsPageSuccess,
    loadInitialElementsPageError: loadInitialElementsPageError,
    loadInitialElementsPageCancelRequest: loadInitialElementsPageCancelRequest,
    loadInitialElementsPageCancel: loadInitialElementsPageCancel,
};
//# sourceMappingURL=loadInitialElementsPageReducers.js.map