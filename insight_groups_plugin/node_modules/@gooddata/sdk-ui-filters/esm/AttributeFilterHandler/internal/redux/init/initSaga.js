import { __generator } from "tslib";
import { all, call, cancelled, put, select, takeLatest } from "redux-saga/effects";
import { actions } from "../store/slice";
import { selectHiddenElements } from "../filter/filterSelectors";
import { initAttributeSaga } from "./initAttributeSaga";
import { initSelectionSaga } from "./initSelectionSaga";
import { initAttributeElementsPageSaga } from "./initElementsPageSaga";
import { initTotalCountSaga } from "./initTotalCount";
/**
 * @internal
 */
export function initWorker() {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, takeLatest(actions.init.match, initSaga)];
            case 1:
                _a.sent();
                return [2 /*return*/];
        }
    });
}
function initSaga(action) {
    var correlation, hiddenElements, error_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                correlation = action.payload.correlation;
                _a.label = 1;
            case 1:
                _a.trys.push([1, 10, 12, 16]);
                return [4 /*yield*/, put(actions.initStart({ correlation: correlation }))];
            case 2:
                _a.sent();
                return [4 /*yield*/, select(selectHiddenElements)];
            case 3:
                hiddenElements = _a.sent();
                if (!((hiddenElements === null || hiddenElements === void 0 ? void 0 : hiddenElements.length) > 0)) return [3 /*break*/, 6];
                return [4 /*yield*/, call(initAttributeSaga, correlation)];
            case 4:
                _a.sent();
                // these need the attribute loaded for the hiddenElements to work
                return [4 /*yield*/, all([
                        call(initSelectionSaga, correlation),
                        call(initAttributeElementsPageSaga, correlation),
                        call(initTotalCountSaga, correlation),
                    ])];
            case 5:
                // these need the attribute loaded for the hiddenElements to work
                _a.sent();
                return [3 /*break*/, 8];
            case 6: return [4 /*yield*/, all([
                    call(initAttributeSaga, correlation),
                    call(initSelectionSaga, correlation),
                    call(initAttributeElementsPageSaga, correlation),
                    call(initTotalCountSaga, correlation),
                ])];
            case 7:
                _a.sent();
                _a.label = 8;
            case 8: return [4 /*yield*/, put(actions.initSuccess({ correlation: correlation }))];
            case 9:
                _a.sent();
                return [3 /*break*/, 16];
            case 10:
                error_1 = _a.sent();
                return [4 /*yield*/, put(actions.initError({ error: error_1, correlation: correlation }))];
            case 11:
                _a.sent();
                return [3 /*break*/, 16];
            case 12: return [4 /*yield*/, cancelled()];
            case 13:
                if (!_a.sent()) return [3 /*break*/, 15];
                return [4 /*yield*/, all([put(actions.initCancel({ correlation: correlation }))])];
            case 14:
                _a.sent();
                _a.label = 15;
            case 15: return [7 /*endfinally*/];
            case 16: return [2 /*return*/];
        }
    });
}
//# sourceMappingURL=initSaga.js.map