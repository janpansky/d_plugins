// (C) 2021-2022 GoodData Corporation
import { newNegativeAttributeFilter, newPositiveAttributeFilter, } from "@gooddata/sdk-model";
import { createSelector } from "@reduxjs/toolkit";
import difference from "lodash/difference";
import union from "lodash/union";
import { selectState } from "../common/selectors";
import { selectCommittedSelection, selectIsCommittedSelectionInverted, } from "../selection/selectionSelectors";
/**
 * @internal
 */
export var selectAttributeFilterElementsForm = createSelector(selectState, function (state) { return state.elementsForm; });
/**
 * @internal
 */
export var selectHiddenElements = createSelector(selectState, function (state) { var _a; return (_a = state.config.hiddenElements) !== null && _a !== void 0 ? _a : []; });
/**
 * @internal
 */
export var selectHiddenElementsAsAttributeElements = createSelector(selectAttributeFilterElementsForm, selectHiddenElements, function (elementsForm, hiddenElements) {
    return elementsForm === "uris" ? { uris: hiddenElements } : { values: hiddenElements };
});
/**
 * @internal
 */
export var selectAttributeFilterDisplayForm = createSelector(selectState, function (state) { return state.displayFormRef; });
/**
 * @internal
 */
export var selectAttributeFilterElements = createSelector(selectAttributeFilterElementsForm, selectCommittedSelection, function (elementsForm, selection) {
    return elementsForm === "uris" ? { uris: selection } : { values: selection };
});
/**
 * @internal
 */
export var selectAttributeFilterElementsWithHiddenElementsResolved = createSelector(selectAttributeFilterElementsForm, selectCommittedSelection, selectIsCommittedSelectionInverted, selectHiddenElements, function (elementsForm, selection, isInverted, hiddenElements) {
    var updatedSelection = isInverted
        ? union(selection, hiddenElements)
        : difference(selection, hiddenElements);
    return elementsForm === "uris" ? { uris: updatedSelection } : { values: updatedSelection };
});
/**
 * @internal
 */
export var selectAttributeFilter = createSelector(selectAttributeFilterDisplayForm, selectIsCommittedSelectionInverted, selectAttributeFilterElementsWithHiddenElementsResolved, function (displayForm, isInverted, elements) {
    return isInverted
        ? newNegativeAttributeFilter(displayForm, elements)
        : newPositiveAttributeFilter(displayForm, elements);
});
//# sourceMappingURL=filterSelectors.js.map