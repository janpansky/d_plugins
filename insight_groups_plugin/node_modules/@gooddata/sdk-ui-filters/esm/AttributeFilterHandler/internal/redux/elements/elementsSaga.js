import { __assign, __generator } from "tslib";
import omit from "lodash/omit";
import { call, select } from "redux-saga/effects";
import { selectAttributeFilterDisplayForm, selectHiddenElementsAsAttributeElements, } from "../filter/filterSelectors";
import { selectAttribute } from "../loadAttribute/loadAttributeSelectors";
import { getAttributeFilterContext } from "../common/sagas";
import { selectStaticElements } from "./elementsSelectors";
import { loadElements } from "./loadElements";
/**
 * @internal
 */
export function elementsSaga(options) {
    var context, hiddenElements, attribute, attributeFilterDisplayFormRef, staticElements, elementsQueryResult;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, call(getAttributeFilterContext)];
            case 1:
                context = _a.sent();
                return [4 /*yield*/, select(selectHiddenElementsAsAttributeElements)];
            case 2:
                hiddenElements = _a.sent();
                return [4 /*yield*/, select(selectAttribute)];
            case 3:
                attribute = _a.sent();
                return [4 /*yield*/, select(selectAttributeFilterDisplayForm)];
            case 4:
                attributeFilterDisplayFormRef = _a.sent();
                return [4 /*yield*/, select(selectStaticElements)];
            case 5:
                staticElements = _a.sent();
                return [4 /*yield*/, call(loadElements, context, __assign({ displayFormRef: attributeFilterDisplayFormRef }, options), {
                        hiddenElements: hiddenElements,
                        attribute: attribute,
                    }, staticElements)];
            case 6:
                elementsQueryResult = _a.sent();
                return [2 /*return*/, {
                        elements: elementsQueryResult.items,
                        totalCount: elementsQueryResult.totalCount,
                        options: omit(options, "signal"),
                    }];
        }
    });
}
//# sourceMappingURL=elementsSaga.js.map