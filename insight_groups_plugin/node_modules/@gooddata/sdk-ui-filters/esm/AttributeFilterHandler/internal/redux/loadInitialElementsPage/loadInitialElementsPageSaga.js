import { __assign, __generator } from "tslib";
import { put, call, takeLatest, select, cancelled } from "redux-saga/effects";
// eslint-disable-next-line import/no-unassigned-import
import "abortcontroller-polyfill/dist/abortcontroller-polyfill-only";
import { getAttributeFilterContext } from "../common/sagas";
import { selectElementsForm } from "../common/selectors";
import { elementsSaga } from "../elements/elementsSaga";
import { selectLoadElementsOptions } from "../elements/elementsSelectors";
import { actions } from "../store/slice";
import { loadLimitingAttributeFiltersAttributes } from "./loadLimitingAttributeFiltersAttributes";
/**
 * @internal
 */
export function loadInitialElementsPageWorker() {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, takeLatest([actions.loadInitialElementsPageRequest.match, actions.loadInitialElementsPageCancelRequest.match], loadInitialElementsPageSaga)];
            case 1:
                _a.sent();
                return [2 /*return*/];
        }
    });
}
/**
 * @internal
 */
export function loadInitialElementsPageSaga(action) {
    var context, abortController, correlation, loadOptions, elementsForm, loadOptionsWithExcludePrimaryLabel, result, limitingAttributeFiltersAttributes, error_1;
    var _a;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, call(getAttributeFilterContext)];
            case 1:
                context = _b.sent();
                abortController = new AbortController();
                correlation = action.payload.correlation;
                _b.label = 2;
            case 2:
                _b.trys.push([2, 10, 12, 16]);
                if (actions.loadInitialElementsPageCancelRequest.match(action)) {
                    // Saga was triggered by cancel request - do nothing, just jump to finally statement
                    return [2 /*return*/];
                }
                return [4 /*yield*/, put(actions.loadInitialElementsPageStart({ correlation: correlation }))];
            case 3:
                _b.sent();
                return [4 /*yield*/, select(selectLoadElementsOptions)];
            case 4:
                loadOptions = _b.sent();
                return [4 /*yield*/, select(selectElementsForm)];
            case 5:
                elementsForm = _b.sent();
                loadOptionsWithExcludePrimaryLabel = __assign(__assign({}, loadOptions), { signal: abortController.signal, excludePrimaryLabel: !context.backend.capabilities.supportsElementUris && elementsForm === "values" });
                return [4 /*yield*/, call(elementsSaga, loadOptionsWithExcludePrimaryLabel)];
            case 6:
                result = _b.sent();
                return [4 /*yield*/, call(loadLimitingAttributeFiltersAttributes, context, (_a = loadOptions.limitingAttributeFilters) !== null && _a !== void 0 ? _a : [])];
            case 7:
                limitingAttributeFiltersAttributes = _b.sent();
                return [4 /*yield*/, put(actions.setLimitingAttributeFiltersAttributes({ attributes: limitingAttributeFiltersAttributes }))];
            case 8:
                _b.sent();
                return [4 /*yield*/, put(actions.loadInitialElementsPageSuccess(__assign(__assign({}, result), { correlation: correlation })))];
            case 9:
                _b.sent();
                return [3 /*break*/, 16];
            case 10:
                error_1 = _b.sent();
                return [4 /*yield*/, put(actions.loadInitialElementsPageError({
                        error: error_1,
                        correlation: correlation,
                    }))];
            case 11:
                _b.sent();
                return [3 /*break*/, 16];
            case 12: return [4 /*yield*/, cancelled()];
            case 13:
                if (!_b.sent()) return [3 /*break*/, 15];
                abortController.abort();
                return [4 /*yield*/, put(actions.loadInitialElementsPageCancel({ correlation: correlation }))];
            case 14:
                _b.sent();
                _b.label = 15;
            case 15: return [7 /*endfinally*/];
            case 16: return [2 /*return*/];
        }
    });
}
//# sourceMappingURL=loadInitialElementsPageSaga.js.map