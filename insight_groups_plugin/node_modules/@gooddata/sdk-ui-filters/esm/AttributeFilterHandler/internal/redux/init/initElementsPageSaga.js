import { __generator } from "tslib";
import { fork, race, take } from "redux-saga/effects";
import { loadInitialElementsPageSaga } from "../loadInitialElementsPage/loadInitialElementsPageSaga";
import { actions } from "../store/slice";
/**
 * @internal
 */
export function initAttributeElementsPageSaga(correlation) {
    var error;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, fork(loadInitialElementsPageSaga, actions.loadInitialElementsPageRequest({ correlation: correlation }))];
            case 1:
                _a.sent();
                return [4 /*yield*/, race({
                        success: take(function (a) {
                            return actions.loadInitialElementsPageSuccess.match(a) && a.payload.correlation === correlation;
                        }),
                        error: take(function (a) {
                            return actions.loadInitialElementsPageError.match(a) && a.payload.correlation === correlation;
                        }),
                        cancel: take(function (a) {
                            return actions.loadInitialElementsPageCancel.match(a) && a.payload.correlation === correlation;
                        }),
                    })];
            case 2:
                error = (_a.sent()).error;
                if (error) {
                    throw error.payload.error;
                }
                return [2 /*return*/];
        }
    });
}
//# sourceMappingURL=initElementsPageSaga.js.map