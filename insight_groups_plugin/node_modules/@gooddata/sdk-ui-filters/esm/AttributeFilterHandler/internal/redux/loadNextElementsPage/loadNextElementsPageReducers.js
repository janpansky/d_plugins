import identity from "lodash/identity";
import { getElementCacheKey } from "../common/selectors";
var loadNextElementsPageRequest = identity;
var loadNextElementsPageStart = function (state) {
    state.elements.nextPageLoad.status = "loading";
    state.elements.nextPageLoad.error = undefined;
};
var loadNextElementsPageSuccess = function (state, action) {
    state.elements.nextPageLoad.status = "success";
    action.payload.elements.forEach(function (el) {
        var cacheKey = getElementCacheKey(state, el);
        if (!state.elements.cache[cacheKey]) {
            state.elements.cache[cacheKey] = el;
        }
    });
    state.elements.data = state.elements.data.concat(action.payload.elements.map(function (el) { return getElementCacheKey(state, el); }));
    state.elements.lastLoadedOptions = action.payload.options;
};
var loadNextElementsPageError = function (state, action) {
    state.elements.nextPageLoad.status = "error";
    state.elements.nextPageLoad.error = action.payload.error;
};
var loadNextElementsPageCancelRequest = identity;
var loadNextElementsPageCancel = function (state) {
    state.elements.nextPageLoad.status = "canceled";
};
/**
 * @internal
 */
export var loadNextElementsPageReducers = {
    loadNextElementsPageRequest: loadNextElementsPageRequest,
    loadNextElementsPageStart: loadNextElementsPageStart,
    loadNextElementsPageSuccess: loadNextElementsPageSuccess,
    loadNextElementsPageError: loadNextElementsPageError,
    loadNextElementsPageCancelRequest: loadNextElementsPageCancelRequest,
    loadNextElementsPageCancel: loadNextElementsPageCancel,
};
//# sourceMappingURL=loadNextElementsPageReducers.js.map