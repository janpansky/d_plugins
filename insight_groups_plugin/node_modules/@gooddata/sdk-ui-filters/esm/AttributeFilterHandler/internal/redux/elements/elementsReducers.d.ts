import { IElementsQueryAttributeFilter } from "@gooddata/sdk-backend-spi";
import { IAttributeMetadataObject, IMeasure, IRelativeDateFilter, SortDirection } from "@gooddata/sdk-model";
/**
 * @internal
 */
export declare const elementsReducers: {
    setElementsTotalCount: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            totalCount: number;
        };
        type: string;
    }>;
    setElementsTotalCountWithCurrentSettings: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            totalCount: number;
        };
        type: string;
    }>;
    setOffset: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            offset: number;
        };
        type: string;
    }>;
    setLimit: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            limit: number;
        };
        type: string;
    }>;
    setSearch: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            search: string;
        };
        type: string;
    }>;
    setOrder: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            order: SortDirection;
        };
        type: string;
    }>;
    setLimitingAttributeFilters: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            filters: IElementsQueryAttributeFilter[];
        };
        type: string;
    }>;
    setLimitingMeasures: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            filters: IMeasure[];
        };
        type: string;
    }>;
    setLimitingDateFilters: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            filters: IRelativeDateFilter[];
        };
        type: string;
    }>;
    setLimitingAttributeFiltersAttributes: import("@reduxjs/toolkit").CaseReducer<import("../store/state").AttributeFilterState, {
        payload: {
            attributes: IAttributeMetadataObject[];
        };
        type: string;
    }>;
};
//# sourceMappingURL=elementsReducers.d.ts.map