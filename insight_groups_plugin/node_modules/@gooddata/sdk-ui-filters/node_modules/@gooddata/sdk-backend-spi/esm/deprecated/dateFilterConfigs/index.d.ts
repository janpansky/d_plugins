import * as m from "@gooddata/sdk-model";
import { DateFilterOptionAllTimeType, DateFilterOptionAbsoluteFormType, DateFilterOptionRelativeFormType, DateFilterOptionAbsolutePresetType, DateFilterOptionRelativePresetType, DateFilterOptionType, RelativeDateFilterGranularityOffset } from "@gooddata/sdk-model";
/**
 * Date string - ISO-8601 calendar date string, eg.: '2018-12-30'
 * TODO: https://jira.intgdc.com/browse/RAIL-2415
 * @deprecated Use {@link @gooddata/sdk-model#DateString}
 * @alpha
 */
export declare type DateString = m.DateString;
/**
 * Type that identifies the the all time date filter
 * @deprecated Use {@link @gooddata/sdk-model#DateFilterOptionAllTimeType}
 * @alpha
 */
export declare type AllTimeType = DateFilterOptionAllTimeType;
/**
 * Type that identifies the absolute date filter form
 * @deprecated Use {@link @gooddata/sdk-model#DateFilterOptionAbsoluteFormType}
 * @alpha
 */
export declare type AbsoluteFormType = DateFilterOptionAbsoluteFormType;
/**
 * Type that identifies the relative date filter form
 * @deprecated Use {@link @gooddata/sdk-model#DateFilterOptionRelativeFormType}
 * @alpha
 */
export declare type RelativeFormType = DateFilterOptionRelativeFormType;
/**
 * Type that identifies the absolute date filter preset
 * @deprecated Use {@link @gooddata/sdk-model#DateFilterOptionAbsolutePresetType}
 * @alpha
 */
export declare type AbsolutePresetType = DateFilterOptionAbsolutePresetType;
/**
 * Type that identifies the relative date filter preset
 * @deprecated Use {@link @gooddata/sdk-model#DateFilterOptionRelativePresetType}
 * @alpha
 */
export declare type RelativePresetType = DateFilterOptionRelativePresetType;
/**
 * Type that identifies the date filter option
 * @deprecated Use {@link @gooddata/sdk-model#DateFilterOptionType}
 * @alpha
 */
export declare type OptionType = DateFilterOptionType;
/**
 * Relative granularity offset
 * (e.g. "GDC.time.year" granularity with offset -2 means "the previous 2 years")
 * @deprecated Use {@link @gooddata/sdk-model#RelativeDateFilterGranularityOffset}
 * @alpha
 */
export declare type RelativeGranularityOffset = RelativeDateFilterGranularityOffset;
/**
 * Supported date filter granularity for the relative date filter
 * @deprecated Use {@link @gooddata/sdk-model#DateFilterGranularity}
 * @alpha
 */
export declare type DateFilterGranularity = m.DateFilterGranularity;
/**
 * Type-guard testing whether the provided object is an instance of {@link DateFilterGranularity}.
 * @deprecated Use {@link @gooddata/sdk-model#isDateFilterGranularity}
 * @alpha
 */
export declare const isDateFilterGranularity: (obj: unknown) => obj is m.DateFilterGranularity;
/**
 * Common props for date filter options
 * @deprecated Use {@link @gooddata/sdk-model#IDateFilterOption}
 * @alpha
 */
export interface IDateFilterOption extends m.IDateFilterOption {
}
/**
 * Custom absolute date filter preset
 * @deprecated Use {@link @gooddata/sdk-model#IAbsoluteDateFilterPreset}
 * @alpha
 */
export interface IAbsoluteDateFilterPreset extends m.IAbsoluteDateFilterPreset {
}
/**
 * Custom relative date filter preset
 * @deprecated Use {@link @gooddata/sdk-model#IRelativeDateFilterPreset}
 * @alpha
 */
export interface IRelativeDateFilterPreset extends m.IRelativeDateFilterPreset {
}
/**
 * Generic type to express relative date filter preset of a particular granularity
 * @deprecated Use {@link @gooddata/sdk-model#IRelativeDateFilterPresetOfGranularity}
 * @alpha
 */
export interface IRelativeDateFilterPresetOfGranularity<Key extends DateFilterGranularity> extends m.IRelativeDateFilterPresetOfGranularity<Key> {
}
/**
 * Customized options for the global absolute date filter
 * @deprecated Use {@link @gooddata/sdk-model#IAbsoluteDateFilterForm}
 * @alpha
 */
export interface IAbsoluteDateFilterForm extends m.IAbsoluteDateFilterForm {
}
/**
 * Customized options for the global relative date filter
 * @deprecated Use {@link @gooddata/sdk-model#IRelativeDateFilterForm}
 * @alpha
 */
export interface IRelativeDateFilterForm extends m.IRelativeDateFilterForm {
}
/**
 * Customized options for the global all time date filter
 * @deprecated Use {@link @gooddata/sdk-model#IAllTimeDateFilterOption}
 * @alpha
 */
export interface IAllTimeDateFilterOption extends m.IAllTimeDateFilterOption {
}
/**
 * Type-guard testing whether the provided object is an instance of {@link IAllTimeDateFilterOption}.
 * @deprecated Use {@link @gooddata/sdk-model#isAllTimeDateFilterOption}
 * @alpha
 */
export declare const isAllTimeDateFilterOption: (obj: unknown) => obj is m.IAllTimeDateFilterOption;
/**
 * Type-guard testing whether the provided object is an instance of {@link IAbsoluteDateFilterForm}.
 * @deprecated Use {@link @gooddata/sdk-model#isAbsoluteDateFilterForm}
 * @alpha
 */
export declare const isAbsoluteDateFilterForm: (obj: unknown) => obj is m.IAbsoluteDateFilterForm;
/**
 * Type-guard testing whether the provided object is an instance of {@link IAbsoluteDateFilterPreset}.
 * @deprecated Use {@link @gooddata/sdk-model#isAbsoluteDateFilterPreset}
 * @alpha
 */
export declare const isAbsoluteDateFilterPreset: (obj: unknown) => obj is m.IAbsoluteDateFilterPreset;
/**
 * Type-guard testing whether the provided object is an instance of {@link IRelativeDateFilterForm}.
 * @deprecated Use {@link @gooddata/sdk-model#isRelativeDateFilterForm}
 * @alpha
 */
export declare const isRelativeDateFilterForm: (obj: unknown) => obj is m.IRelativeDateFilterForm;
/**
 * Type-guard testing whether the provided object is an instance of {@link IRelativeDateFilterPreset}.
 * @deprecated Use {@link @gooddata/sdk-model#isRelativeDateFilterPreset}
 * @alpha
 */
export declare const isRelativeDateFilterPreset: (obj: unknown) => obj is m.IRelativeDateFilterPreset;
/**
 * Date filter configs allow to define your own date filter options, that appear in the date filter.
 * @deprecated Use {@link @gooddata/sdk-model#IDateFilterConfig}
 * @alpha
 */
export interface IDateFilterConfig extends m.IDateFilterConfig {
}
//# sourceMappingURL=index.d.ts.map