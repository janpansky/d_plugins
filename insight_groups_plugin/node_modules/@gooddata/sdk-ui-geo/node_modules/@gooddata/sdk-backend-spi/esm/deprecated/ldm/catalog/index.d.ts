import * as m from "@gooddata/sdk-model";
/**
 * Type representing catalog item - attribute, measure, fact or dateDataset
 * @deprecated Use {@link @gooddata/sdk-model#CatalogItem}
 * @public
 */
export declare type CatalogItem = m.CatalogItem;
/**
 * Get metadata object that catalog item represents
 * @param catalogItem - catalog item
 * @returns metadata object
 * @deprecated Use {@link @gooddata/sdk-model#catalogItemMetadataObject}
 * @public
 */
export declare const catalogItemMetadataObject: (catalogItem: m.CatalogItem) => m.MetadataObject;
/**
 * Type representing groupable catalog item - attribute, measure or fact
 * @deprecated Use {@link @gooddata/sdk-model#GroupableCatalogItem}
 * @public
 */
export declare type GroupableCatalogItem = m.GroupableCatalogItem;
export { CatalogItemType, ICatalogItemBase } from "./types";
export { ICatalogAttribute, isCatalogAttribute } from "./attribute";
export { ICatalogMeasure, isCatalogMeasure } from "./measure";
export { ICatalogFact, isCatalogFact } from "./fact";
export { ICatalogDateDataset, ICatalogDateAttribute, isCatalogDateDataset } from "./dateDataset";
export { ICatalogGroup, IGroupableCatalogItemBase } from "./group";
//# sourceMappingURL=index.d.ts.map