// (C) 2019-2022 GoodData Corporation
import React, { useCallback } from "react";
import { useToastMessage } from "@gooddata/sdk-ui-kit";
import { useSaveAs } from "./useSaveAs";
import { SaveAsDialogRenderer } from "./SaveAsDialogRenderer";
import { messages } from "../../../locales";
import { selectIsSaveAsDialogOpen, uiActions, useDashboardDispatch, useDashboardSelector, } from "../../../model";
/**
 * @internal
 */
export function useSaveAsDialogProps() {
    var _a = useToastMessage(), addSuccess = _a.addSuccess, addError = _a.addError;
    var dispatch = useDashboardDispatch();
    var closeSaveAsDialog = useCallback(function () { return dispatch(uiActions.closeSaveAsDialog()); }, [dispatch]);
    var isSaveAsDialogOpen = useDashboardSelector(selectIsSaveAsDialogOpen);
    var onSaveAsError = useCallback(function () {
        closeSaveAsDialog();
        addError(messages.messagesDashboardSaveFailed);
    }, []);
    var onSaveAsSuccess = useCallback(function () {
        closeSaveAsDialog();
        addSuccess(messages.messagesDashboardSaveSuccess);
    }, []);
    var onSaveAsCancel = useCallback(function () {
        closeSaveAsDialog();
    }, []);
    return {
        isVisible: isSaveAsDialogOpen,
        onCancel: onSaveAsCancel,
        onError: onSaveAsError,
        onSuccess: onSaveAsSuccess,
    };
}
/**
 * @alpha
 */
export var DefaultSaveAsDialog = function (props) {
    var onSubmit = props.onSubmit, onCancel = props.onCancel, onError = props.onError, isVisible = props.isVisible, onSuccess = props.onSuccess;
    var _a = useSaveAs({ onSubmit: onSubmit, onSubmitSuccess: onSuccess, onSubmitError: onError }), locale = _a.locale, dashboardTitle = _a.dashboardTitle, isKpiWidgetEnabled = _a.isKpiWidgetEnabled, isScheduleEmailsEnabled = _a.isScheduleEmailsEnabled, isDashboardSaving = _a.isDashboardSaving, isDashboardLoaded = _a.isDashboardLoaded, handleSaveAs = _a.handleSaveAs;
    if (!isVisible) {
        return null;
    }
    return (React.createElement(SaveAsDialogRenderer, { locale: locale, dashboardTitle: dashboardTitle, isKpiWidgetEnabled: isKpiWidgetEnabled, isDashboardLoaded: isDashboardLoaded, isDashboardSaving: isDashboardSaving, isScheduleEmailsEnabled: isScheduleEmailsEnabled, onSubmit: handleSaveAs, onCancel: onCancel }));
};
//# sourceMappingURL=index.js.map