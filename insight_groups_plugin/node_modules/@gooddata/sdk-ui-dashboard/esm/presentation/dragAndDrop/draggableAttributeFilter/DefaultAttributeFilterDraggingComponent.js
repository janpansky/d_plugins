// (C) 2007-2022 GoodData Corporation
import React from "react";
import { Icon, ShortenedText } from "@gooddata/sdk-ui-kit";
import { useTheme } from "@gooddata/sdk-ui-theme-provider";
import { areObjRefsEqual, idRef, uriRef, } from "@gooddata/sdk-model";
import { createSelector } from "@reduxjs/toolkit";
import { selectCatalogAttributeDisplayForms, useDashboardSelector } from "../../../model";
function isDisplayFormEqual(displayForm, identifierOrUriRef) {
    return (areObjRefsEqual(idRef(displayForm.id, displayForm.type), identifierOrUriRef) ||
        areObjRefsEqual(uriRef(displayForm.uri), identifierOrUriRef));
}
var selectFilterDisplayForm = function (filter) {
    return createSelector(selectCatalogAttributeDisplayForms, function (displayFroms) {
        return displayFroms.find(function (displayForm) {
            return isDisplayFormEqual(displayForm, filter.attributeFilter.displayForm);
        });
    });
};
export var DefaultAttributeFilterDraggingComponent = function (_a) {
    var _b, _c;
    var item = _a.item;
    var theme = useTheme();
    var filterDisplayForm = useDashboardSelector(selectFilterDisplayForm(item.filter));
    if (!filterDisplayForm) {
        return null;
    }
    return (React.createElement("div", { className: "attribute-filter-button is-dragging" },
        React.createElement(Icon.DragHandle, { width: 7, height: 26, className: "drag-handle-icon", color: (_c = (_b = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _b === void 0 ? void 0 : _b.complementary) === null || _c === void 0 ? void 0 : _c.c5 }),
        React.createElement("div", { className: "button-content" },
            React.createElement("div", { className: "button-title" },
                React.createElement(ShortenedText, null, filterDisplayForm.title)))));
};
//# sourceMappingURL=DefaultAttributeFilterDraggingComponent.js.map