// (C) 2022 GoodData Corporation
import React, { useMemo } from "react";
import { useDragLayer } from "react-dnd";
import { DefaultAttributeFilterDraggingComponent } from "./draggableAttributeFilter";
var layerStyles = {
    position: "fixed",
    pointerEvents: "none",
    zIndex: 5001,
    left: 0,
    top: 0,
    width: "100%",
    height: "100%",
};
function getItemStyles(initialOffset, currentOffset) {
    if (!initialOffset || !currentOffset) {
        return {
            display: "none",
        };
    }
    var x = currentOffset.x, y = currentOffset.y;
    var transform = "translate(" + x + "px, " + y + "px)";
    return {
        transform: transform,
        WebkitTransform: transform,
    };
}
export var DragLayerComponent = function () {
    var _a = useDragLayer(function (monitor) { return ({
        item: monitor.getItem(),
        itemType: monitor.getItemType(),
        initialOffset: monitor.getInitialSourceClientOffset(),
        currentOffset: monitor.getSourceClientOffset(),
        isDragging: monitor.isDragging(),
    }); }), itemType = _a.itemType, isDragging = _a.isDragging, item = _a.item, initialOffset = _a.initialOffset, currentOffset = _a.currentOffset;
    var component = useMemo(function () {
        // eslint-disable-next-line sonarjs/no-small-switch
        switch (itemType) {
            case "attributeFilter":
                // TODO get from filter, accept filter custom component definition
                return React.createElement(DefaultAttributeFilterDraggingComponent, { itemType: itemType, item: item });
            default:
                return null;
        }
    }, [itemType]);
    if (!isDragging) {
        return null;
    }
    return (React.createElement("div", { style: layerStyles },
        React.createElement("div", { className: "drag-preview", style: getItemStyles(initialOffset, currentOffset) }, component)));
};
//# sourceMappingURL=DragLayer.js.map