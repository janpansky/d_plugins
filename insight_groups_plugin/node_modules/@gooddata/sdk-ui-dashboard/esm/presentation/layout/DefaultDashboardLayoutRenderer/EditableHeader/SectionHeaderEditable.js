// (C) 2019-2022 GoodData Corporation
import React, { useCallback } from "react";
import { useIntl } from "react-intl";
import { EditableLabelWithBubble } from "./EditableLabelWithBubble";
import { getTitle, getDescription, MAX_TITLE_LENGTH, TITLE_LENGTH_WARNING_LIMIT, MAX_DESCRIPTION_LENGTH, DESCRIPTION_LENGTH_WARNING_LIMIT, } from "./sectionHeaderHelper";
import { changeLayoutSectionHeader, uiActions, useDashboardDispatch } from "../../../../model";
export function SectionHeaderEditable(props) {
    var description = getDescription(props.description);
    var title = getTitle(props.title);
    var index = props.index;
    var intl = useIntl();
    var dispatch = useDashboardDispatch();
    var setActiveHeaderIndex = useCallback(function (index) { return dispatch(uiActions.setActiveHeaderIndex(index)); }, [dispatch]);
    var changeTitle = useCallback(function (title) { return dispatch(changeLayoutSectionHeader(index, { title: title }, true)); }, [dispatch, index]);
    var changeDescription = useCallback(function (description) { return dispatch(changeLayoutSectionHeader(index, { description: description }, true)); }, [dispatch, index]);
    var onFocus = useCallback(function () {
        setActiveHeaderIndex(index);
    }, [index, setActiveHeaderIndex]);
    var onBlur = useCallback(function () {
        setActiveHeaderIndex(null);
    }, [setActiveHeaderIndex]);
    var onTitleSubmit = useCallback(function (title) {
        changeTitle(title);
        onBlur();
    }, [changeTitle, onBlur]);
    var onDescriptionSubmit = useCallback(function (description) {
        changeDescription(description);
        onBlur();
    }, [changeDescription, onBlur]);
    return (React.createElement("div", { className: "gd-row-header-edit" },
        React.createElement("div", { className: "gd-editable-label-container gd-row-header-title-wrapper" },
            React.createElement(EditableLabelWithBubble, { className: "gd-title-for-" + index + " s-fluid-layout-row-title-input title gd-heading-2", maxRows: 10, value: title || "", maxLength: MAX_TITLE_LENGTH, warningLimit: TITLE_LENGTH_WARNING_LIMIT, placeholderMessage: intl.formatMessage({ id: "layout.header.add.title.placeholder" }), alignTo: ".gd-title-for-" + index, onSubmit: onTitleSubmit, onEditingStart: onFocus, onCancel: onBlur })),
        React.createElement("div", { className: "gd-editable-label-container gd-row-header-description-wrapper" },
            React.createElement(EditableLabelWithBubble, { className: "gd-description-for-" + index + " s-fluid-layout-row-description-input description", alignTo: ".gd-description-for-" + index, maxRows: 15, value: description || "", maxLength: MAX_DESCRIPTION_LENGTH, warningLimit: DESCRIPTION_LENGTH_WARNING_LIMIT, placeholderMessage: intl.formatMessage({
                    id: "layout.header.add.description.placeholder",
                }), onSubmit: onDescriptionSubmit, onEditingStart: onFocus, onCancel: onBlur }))));
}
//# sourceMappingURL=SectionHeaderEditable.js.map