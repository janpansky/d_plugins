// (C) 2022 GoodData Corporation
import { __awaiter, __generator } from "tslib";
import { useBackendStrict, useCancelablePromise, useWorkspaceStrict, } from "@gooddata/sdk-ui";
import { selectCanManageScheduledMail, selectDashboardRef, useDashboardSelector } from "../../../model";
export var useScheduledEmailManagement = function (props) {
    var onError = props.onError, onSuccess = props.onSuccess, loadScheduledMails = props.loadScheduledMails;
    var dashboardRef = useDashboardSelector(selectDashboardRef);
    var canManageScheduledMail = useDashboardSelector(selectCanManageScheduledMail);
    var effectiveBackend = useBackendStrict();
    var effectiveWorkspace = useWorkspaceStrict();
    var loadResultPromise = loadScheduledMails
        ? function () { return __awaiter(void 0, void 0, void 0, function () {
            var scheduledEmails, reversedScheduledEmails;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, effectiveBackend
                            .workspace(effectiveWorkspace)
                            .dashboards()
                            .getScheduledMailsForDashboard(dashboardRef, {
                            loadUserData: canManageScheduledMail,
                            createdByCurrentUser: !canManageScheduledMail,
                        })];
                    case 1:
                        scheduledEmails = _a.sent();
                        reversedScheduledEmails = scheduledEmails.reverse();
                        return [2 /*return*/, reversedScheduledEmails];
                }
            });
        }); }
        : null;
    return useCancelablePromise({ promise: loadResultPromise, onError: onError, onSuccess: onSuccess }, [
        effectiveBackend,
        effectiveWorkspace,
        canManageScheduledMail,
        dashboardRef,
        loadScheduledMails,
    ]);
};
//# sourceMappingURL=useScheduledEmailManagement.js.map