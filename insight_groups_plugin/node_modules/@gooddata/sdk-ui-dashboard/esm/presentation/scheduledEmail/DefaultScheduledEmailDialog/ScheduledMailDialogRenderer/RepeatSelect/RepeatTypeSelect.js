// (C) 2019-2022 GoodData Corporation
import React, { useMemo } from "react";
import { useIntl } from "react-intl";
import { Dropdown, DropdownList, DropdownButton, SingleSelectListItem } from "@gooddata/sdk-ui-kit";
import invariant from "ts-invariant";
import { DEFAULT_DROPDOWN_ALIGN_POINTS, DEFAULT_DROPDOWN_ZINDEX, REPEAT_TYPES } from "../../constants";
import { getWeek, getIntlDayName } from "../../utils/datetime";
import { messages } from "../../../../../locales";
var DROPDOWN_WIDTH = 199;
export var RepeatTypeSelect = function (props) {
    var onChange = props.onChange, repeatType = props.repeatType, startDate = props.startDate;
    var intl = useIntl();
    var repeatItems = useMemo(function () {
        return [REPEAT_TYPES.DAILY, REPEAT_TYPES.WEEKLY, REPEAT_TYPES.MONTHLY, REPEAT_TYPES.CUSTOM].map(function (id) {
            return {
                id: id,
                title: intl.formatMessage(messages["scheduleDialogEmailRepeats_" + id], {
                    day: getIntlDayName(intl, startDate),
                    week: getWeek(startDate),
                }),
            };
        });
    }, [intl, startDate]);
    var repeatTypeItem = repeatItems.find(function (item) { return item.id === repeatType; });
    invariant(repeatTypeItem, "Inconsistent state in RepeatTypeSelect");
    return (React.createElement(Dropdown, { alignPoints: DEFAULT_DROPDOWN_ALIGN_POINTS, className: "gd-schedule-email-dialog-repeat-type s-gd-schedule-email-dialog-repeat-type", renderButton: function (_a) {
            var toggleDropdown = _a.toggleDropdown;
            return (React.createElement(DropdownButton, { value: repeatTypeItem.title, onClick: toggleDropdown }));
        }, renderBody: function (_a) {
            var closeDropdown = _a.closeDropdown, isMobile = _a.isMobile;
            return (React.createElement(DropdownList, { width: DROPDOWN_WIDTH, items: repeatItems, isMobile: isMobile, renderItem: function (_a) {
                    var item = _a.item;
                    return (React.createElement(SingleSelectListItem, { title: item.title, onClick: function () {
                            onChange(item.id);
                            closeDropdown();
                        }, isSelected: repeatTypeItem.id === item.id }));
                } }));
        }, overlayPositionType: "sameAsTarget", overlayZIndex: DEFAULT_DROPDOWN_ZINDEX }));
};
//# sourceMappingURL=RepeatTypeSelect.js.map