import { __assign } from "tslib";
// (C) 2021-2022 GoodData Corporation
import React, { useMemo } from "react";
import { AttributeFilterButton } from "@gooddata/sdk-ui-filters";
import { useTheme } from "@gooddata/sdk-ui-theme-provider";
import { Icon } from "@gooddata/sdk-ui-kit";
import { attributeFilterToDashboardAttributeFilter, dashboardAttributeFilterToAttributeFilter, } from "../../../_staging/dashboard/dashboardFilterConverter";
import { AttributeFilterBody } from "./dashboardDropdownBody/AttributeFilterBody";
import { useParentFilters } from "./useParentFilters";
import { selectLocale, useDashboardSelector } from "../../../model";
/**
 * Default implementation of the attribute filter to use on the dashboard's filter bar.
 *
 * This will use the SDK's AttributeFilter with the button styled same as we have it today on KD.
 *
 * @alpha
 */
export var DefaultDashboardAttributeFilter = function (props) {
    var _a, _b;
    var filter = props.filter, onFilterChanged = props.onFilterChanged, isDraggable = props.isDraggable;
    var _c = useParentFilters(filter), parentFilters = _c.parentFilters, parentFilterOverAttribute = _c.parentFilterOverAttribute;
    var locale = useDashboardSelector(selectLocale);
    var attributeFilter = useMemo(function () { return dashboardAttributeFilterToAttributeFilter(filter); }, [filter]);
    var theme = useTheme();
    return (React.createElement(AttributeFilterButton, { filter: attributeFilter, onApply: function (newFilter) {
            onFilterChanged(attributeFilterToDashboardAttributeFilter(newFilter, filter.attributeFilter.localIdentifier));
        }, renderBody: function (filterBodyProps) {
            return React.createElement(AttributeFilterBody, __assign({}, filterBodyProps));
        }, parentFilters: parentFilters, parentFilterOverAttribute: parentFilterOverAttribute, locale: locale, buttonProps: isDraggable
            ? {
                className: "is-draggable",
                startAdornment: (React.createElement(Icon.DragHandle, { width: 7, height: 26, className: "drag-handle-icon", color: (_b = (_a = theme === null || theme === void 0 ? void 0 : theme.palette) === null || _a === void 0 ? void 0 : _a.complementary) === null || _b === void 0 ? void 0 : _b.c5 })),
            }
            : undefined }));
};
//# sourceMappingURL=DefaultDashboardAttributeFilter.js.map