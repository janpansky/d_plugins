import { __assign, __read } from "tslib";
// (C) 2022 GoodData Corporation
import { areObjRefsEqual } from "@gooddata/sdk-model";
import { useState, useCallback } from "react";
import { useDashboardSelector, useDispatchDashboardCommand, selectCatalogAttributes, setAttributeFilterDisplayForm, } from "../../../../../../model";
export function useDisplayFormConfiguration(currentFilter) {
    var catalogAttributes = useDashboardSelector(selectCatalogAttributes);
    var changeDisplayFormCommand = useDispatchDashboardCommand(setAttributeFilterDisplayForm);
    var _a = __read(useState(currentFilter.attributeFilter.displayForm), 1), originalDisplayForm = _a[0];
    var _b = __read(useState(false), 2), displayFormChanged = _b[0], setDisplayFormChanged = _b[1];
    var _c = __read(useState(function () {
        var currentDisplayForm = currentFilter.attributeFilter.displayForm;
        var availableDisplayForms = catalogAttributes.find(function (attribute) {
            return attribute.displayForms.some(function (df) { return areObjRefsEqual(df.ref, currentDisplayForm); });
        }).displayForms;
        return {
            selectedDisplayForm: currentDisplayForm,
            availableDisplayForms: availableDisplayForms,
        };
    }), 2), filterDisplayForms = _c[0], setFilterDisplayForms = _c[1];
    var onDisplayFormSelect = useCallback(function (displayForm) {
        var updatedDisplayForms = __assign({}, filterDisplayForms);
        updatedDisplayForms.selectedDisplayForm = displayForm;
        setFilterDisplayForms(updatedDisplayForms);
        setDisplayFormChanged(!areObjRefsEqual(displayForm, originalDisplayForm));
    }, [filterDisplayForms]);
    var onDisplayFormChange = useCallback(function () {
        if (!areObjRefsEqual(originalDisplayForm, filterDisplayForms.selectedDisplayForm)) {
            changeDisplayFormCommand(currentFilter.attributeFilter.localIdentifier, filterDisplayForms.selectedDisplayForm);
        }
    }, [filterDisplayForms]);
    return {
        onDisplayFormSelect: onDisplayFormSelect,
        filterDisplayForms: filterDisplayForms,
        displayFormChanged: displayFormChanged,
        onDisplayFormChange: onDisplayFormChange,
    };
}
//# sourceMappingURL=useDisplayFormConfiguration.js.map