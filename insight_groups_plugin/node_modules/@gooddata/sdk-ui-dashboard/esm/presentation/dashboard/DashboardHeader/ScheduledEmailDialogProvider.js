// (C) 2022 GoodData Corporation
import React from "react";
import { ScheduledEmailDialog, ScheduledEmailManagementDialog } from "../../scheduledEmail";
import { useDashboardScheduledEmails } from "../../../model";
export var ScheduledEmailDialogProvider = function () {
    var _a = useDashboardScheduledEmails(), isScheduleEmailingDialogOpen = _a.isScheduleEmailingDialogOpen, isScheduleEmailingManagementDialogOpen = _a.isScheduleEmailingManagementDialogOpen, onScheduleEmailingCancel = _a.onScheduleEmailingCancel, onScheduleEmailingCreateError = _a.onScheduleEmailingCreateError, onScheduleEmailingCreateSuccess = _a.onScheduleEmailingCreateSuccess, onScheduleEmailingManagementAdd = _a.onScheduleEmailingManagementAdd, onScheduleEmailingManagementEdit = _a.onScheduleEmailingManagementEdit, scheduledEmailToEdit = _a.scheduledEmailToEdit, onScheduleEmailingSaveError = _a.onScheduleEmailingSaveError, onScheduleEmailingSaveSuccess = _a.onScheduleEmailingSaveSuccess, onScheduleEmailingManagementClose = _a.onScheduleEmailingManagementClose, onScheduleEmailingManagementLoadingError = _a.onScheduleEmailingManagementLoadingError, onScheduleEmailingManagementDeleteSuccess = _a.onScheduleEmailingManagementDeleteSuccess, onScheduleEmailingManagementDeleteError = _a.onScheduleEmailingManagementDeleteError;
    return (React.createElement(React.Fragment, null,
        isScheduleEmailingManagementDialogOpen && (React.createElement(ScheduledEmailManagementDialog, { isVisible: isScheduleEmailingManagementDialogOpen, onAdd: onScheduleEmailingManagementAdd, onEdit: onScheduleEmailingManagementEdit, onClose: onScheduleEmailingManagementClose, onDeleteSuccess: onScheduleEmailingManagementDeleteSuccess, onLoadError: onScheduleEmailingManagementLoadingError, onDeleteError: onScheduleEmailingManagementDeleteError })),
        isScheduleEmailingDialogOpen && (React.createElement(ScheduledEmailDialog, { isVisible: isScheduleEmailingDialogOpen, onCancel: onScheduleEmailingCancel, onError: onScheduleEmailingCreateError, onSuccess: onScheduleEmailingCreateSuccess, editSchedule: scheduledEmailToEdit, onSaveError: onScheduleEmailingSaveError, onSaveSuccess: onScheduleEmailingSaveSuccess }))));
};
//# sourceMappingURL=ScheduledEmailDialogProvider.js.map