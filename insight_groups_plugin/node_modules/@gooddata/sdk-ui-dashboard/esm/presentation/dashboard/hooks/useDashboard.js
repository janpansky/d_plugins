// (C) 2022 GoodData Corporation
import { useCallback, useMemo } from "react";
import { idRef } from "@gooddata/sdk-model";
import { useBackendStrict, useWorkspaceStrict } from "@gooddata/sdk-ui";
import { useThemeIsLoading } from "@gooddata/sdk-ui-theme-provider";
import { DefaultDashboardAttributeFilter } from "../../filterBar";
import { DefaultDashboardWidget, DefaultDashboardInsight, DefaultDashboardInsightMenuButton, LegacyDashboardInsightMenuButton, DefaultDashboardInsightMenu, LegacyDashboardInsightMenu, DefaultDashboardKpi, DefaultInsightBody, } from "../../widget";
export var useDashboard = function (props) {
    var dashboard = props.dashboard, DashboardAttributeFilterComponentProvider = props.DashboardAttributeFilterComponentProvider, WidgetComponentProvider = props.WidgetComponentProvider, InsightComponentProvider = props.InsightComponentProvider, InsightBodyComponentProvider = props.InsightBodyComponentProvider, InsightMenuButtonComponentProvider = props.InsightMenuButtonComponentProvider, insightMenuItemsProvider = props.insightMenuItemsProvider, InsightMenuComponentProvider = props.InsightMenuComponentProvider, KpiComponentProvider = props.KpiComponentProvider;
    var backend = useBackendStrict(props.backend);
    var workspace = useWorkspaceStrict(props.workspace);
    var attributeFilterProvider = useCallback(function (filter) {
        var userSpecified = DashboardAttributeFilterComponentProvider === null || DashboardAttributeFilterComponentProvider === void 0 ? void 0 : DashboardAttributeFilterComponentProvider(filter);
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardAttributeFilter;
    }, [DashboardAttributeFilterComponentProvider]);
    var widgetProvider = useCallback(function (widget) {
        var userSpecified = WidgetComponentProvider === null || WidgetComponentProvider === void 0 ? void 0 : WidgetComponentProvider(widget);
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardWidget;
    }, [WidgetComponentProvider]);
    var insightProvider = useCallback(function (insight, widget) {
        var userSpecified = InsightComponentProvider === null || InsightComponentProvider === void 0 ? void 0 : InsightComponentProvider(insight, widget);
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardInsight;
    }, [InsightComponentProvider]);
    var insightBodyProvider = useCallback(function (insight, widget) {
        var userSpecified = InsightBodyComponentProvider === null || InsightBodyComponentProvider === void 0 ? void 0 : InsightBodyComponentProvider(insight, widget);
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultInsightBody;
    }, [InsightBodyComponentProvider]);
    var insightMenuButtonProvider = useCallback(function (insight, widget) {
        var userSpecified = InsightMenuButtonComponentProvider === null || InsightMenuButtonComponentProvider === void 0 ? void 0 : InsightMenuButtonComponentProvider(insight, widget);
        // if user customizes the items, always use the "new" default menu button
        var FallbackDashboardInsightMenuButtonInner = insightMenuItemsProvider
            ? DefaultDashboardInsightMenuButton
            : LegacyDashboardInsightMenuButton;
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : FallbackDashboardInsightMenuButtonInner;
    }, [InsightMenuButtonComponentProvider]);
    var insightMenuProvider = useCallback(function (insight, widget) {
        var userSpecified = InsightMenuComponentProvider === null || InsightMenuComponentProvider === void 0 ? void 0 : InsightMenuComponentProvider(insight, widget);
        // if user customizes the items, always use the "new" default menu
        var FallbackDashboardInsightMenuInner = insightMenuItemsProvider
            ? DefaultDashboardInsightMenu
            : LegacyDashboardInsightMenu;
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : FallbackDashboardInsightMenuInner;
    }, [InsightMenuComponentProvider]);
    var kpiProvider = useCallback(function (kpi, widget) {
        var userSpecified = KpiComponentProvider === null || KpiComponentProvider === void 0 ? void 0 : KpiComponentProvider(kpi, widget);
        return userSpecified !== null && userSpecified !== void 0 ? userSpecified : DefaultDashboardKpi;
    }, [KpiComponentProvider]);
    var dashboardOrRef = useMemo(function () {
        return typeof dashboard === "string" ? idRef(dashboard) : dashboard;
    }, [dashboard]);
    var isThemeLoading = useThemeIsLoading();
    var hasThemeProvider = isThemeLoading !== undefined;
    return {
        backend: backend,
        workspace: workspace,
        hasThemeProvider: hasThemeProvider,
        dashboardOrRef: dashboardOrRef,
        attributeFilterProvider: attributeFilterProvider,
        widgetProvider: widgetProvider,
        insightProvider: insightProvider,
        insightBodyProvider: insightBodyProvider,
        insightMenuButtonProvider: insightMenuButtonProvider,
        insightMenuProvider: insightMenuProvider,
        kpiProvider: kpiProvider,
    };
};
//# sourceMappingURL=useDashboard.js.map