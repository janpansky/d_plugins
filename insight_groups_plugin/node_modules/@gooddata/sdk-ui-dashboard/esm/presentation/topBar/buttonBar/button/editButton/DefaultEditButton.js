// (C) 2022 GoodData Corporation
import React, { useCallback } from "react";
import { useIntl } from "react-intl";
import { Button, useMediaQuery } from "@gooddata/sdk-ui-kit";
import { selectIsInEditMode, useDashboardDispatch, useDashboardSelector } from "../../../../../model";
import { switchToEditRenderMode } from "../../../../../model/commands/ui";
import { selectIsDashboardLoading } from "../../../../../model/store/loading/loadingSelectors";
import { selectCanEnterEditMode } from "../selectors";
/**
 * @internal
 */
export function useEditButtonProps() {
    var minWidthForEditing = useMediaQuery(">=xl");
    var canEnterEdit = useDashboardSelector(selectCanEnterEditMode);
    var isDashboardLoading = useDashboardSelector(selectIsDashboardLoading);
    var isEditing = useDashboardSelector(selectIsInEditMode);
    var dispatch = useDashboardDispatch();
    var onEditClick = useCallback(function () { return dispatch(switchToEditRenderMode()); }, [dispatch]);
    return {
        isVisible: minWidthForEditing && !isEditing && canEnterEdit,
        isEnabled: !isDashboardLoading,
        onEditClick: onEditClick,
    };
}
/**
 * @internal
 */
export function DefaultEditButton(_a) {
    var isVisible = _a.isVisible, isEnabled = _a.isEnabled, onEditClick = _a.onEditClick;
    var intl = useIntl();
    if (!isVisible) {
        return null;
    }
    return (React.createElement(Button, { className: "gd-button-action gd-icon-pencil s-edit_button", value: intl.formatMessage({ id: "controlButtons.edit.value" }), disabled: !isEnabled, onClick: onEditClick }));
}
//# sourceMappingURL=DefaultEditButton.js.map