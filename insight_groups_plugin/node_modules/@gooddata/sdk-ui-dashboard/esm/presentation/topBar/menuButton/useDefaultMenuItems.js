// (C) 2022 GoodData Corporation
import { useIntl } from "react-intl";
import { exportDashboardToPdf, selectCanCreateAnalyticalDashboard, selectCanExportReport, selectEnableKPIDashboardExportPDF, selectIsLayoutEmpty, selectIsReadOnly, selectMenuButtonItemsVisibility, selectIsInEditMode, selectIsInViewMode, uiActions, useDashboardCommandProcessing, useDashboardDispatch, useDashboardScheduledEmails, useDashboardSelector, } from "../../../model";
import { selectIsNewDashboard } from "../../../model/store/meta/metaSelectors";
import { useToastMessage } from "@gooddata/sdk-ui-kit";
import { useCallback, useMemo, useRef } from "react";
import { downloadFile } from "../../../_staging/fileUtils/downloadFile";
import { isProtectedDataError } from "@gooddata/sdk-backend-spi";
import { selectIsSaveAsNewButtonHidden } from "../../../model/store/config/configSelectors";
import { messages } from "../../../locales";
/**
 * @internal
 */
export var useDefaultMenuItems = function () {
    var intl = useIntl();
    var isNewDashboard = useDashboardSelector(selectIsNewDashboard);
    var isEmptyLayout = useDashboardSelector(selectIsLayoutEmpty);
    var _a = useToastMessage(), addSuccess = _a.addSuccess, addError = _a.addError, addProgress = _a.addProgress, removeMessage = _a.removeMessage;
    var _b = useDashboardScheduledEmails(), isScheduledEmailingVisible = _b.isScheduledEmailingVisible, defaultOnScheduleEmailing = _b.defaultOnScheduleEmailing;
    var dispatch = useDashboardDispatch();
    var openSaveAsDialog = function () { return dispatch(uiActions.openSaveAsDialog()); };
    var openDeleteDialog = function () { return dispatch(uiActions.openDeleteDialog()); };
    var lastExportMessageId = useRef("");
    var exportDashboard = useDashboardCommandProcessing({
        commandCreator: exportDashboardToPdf,
        successEvent: "GDC.DASH/EVT.EXPORT.PDF.RESOLVED",
        errorEvent: "GDC.DASH/EVT.COMMAND.FAILED",
        onBeforeRun: function () {
            lastExportMessageId.current = addProgress(messages.messagesExportResultStart, 
            // make sure the message stays there until removed by either success or error
            { duration: 0 });
        },
        onSuccess: function (e) {
            if (lastExportMessageId.current) {
                removeMessage(lastExportMessageId.current);
            }
            addSuccess(messages.messagesExportResultSuccess);
            downloadFile(e.payload.resultUri);
        },
        onError: function (err) {
            if (lastExportMessageId.current) {
                removeMessage(lastExportMessageId.current);
            }
            if (isProtectedDataError(err)) {
                addError(messages.messagesExportResultRestrictedError);
            }
            else {
                addError(messages.messagesExportResultError);
            }
        },
    }).run;
    var defaultOnSaveAs = useCallback(function () {
        if (isNewDashboard) {
            return;
        }
        openSaveAsDialog();
    }, [isNewDashboard]);
    var defaultOnExportToPdf = useCallback(function () {
        if (isNewDashboard) {
            return;
        }
        exportDashboard();
    }, [exportDashboard, isNewDashboard]);
    var isReadOnly = useDashboardSelector(selectIsReadOnly);
    var isInViewMode = useDashboardSelector(selectIsInViewMode);
    var isInEditMode = useDashboardSelector(selectIsInEditMode);
    var canCreateDashboard = useDashboardSelector(selectCanCreateAnalyticalDashboard);
    var isSaveAsNewHidden = useDashboardSelector(selectIsSaveAsNewButtonHidden);
    var canExportReport = useDashboardSelector(selectCanExportReport);
    var isKPIDashboardExportPDFEnabled = !!useDashboardSelector(selectEnableKPIDashboardExportPDF);
    var menuButtonItemsVisibility = useDashboardSelector(selectMenuButtonItemsVisibility);
    return useMemo(function () {
        var _a, _b, _c;
        if (isNewDashboard) {
            return [];
        }
        var isDeleteVisible = isInEditMode && ((_a = menuButtonItemsVisibility.deleteButton) !== null && _a !== void 0 ? _a : true);
        var isSaveAsVisible = canCreateDashboard && !isSaveAsNewHidden && ((_b = menuButtonItemsVisibility.saveAsNewButton) !== null && _b !== void 0 ? _b : true);
        var isSaveAsDisabled = isEmptyLayout || isNewDashboard || isReadOnly;
        var isPdfExportVisible = isInViewMode &&
            canExportReport &&
            isKPIDashboardExportPDFEnabled &&
            ((_c = menuButtonItemsVisibility.pdfExportButton) !== null && _c !== void 0 ? _c : true);
        return [
            {
                type: "button",
                itemId: "save_as_menu_item",
                disabled: isSaveAsDisabled,
                visible: isSaveAsVisible,
                itemName: intl.formatMessage({ id: "options.menu.save.as" }),
                tooltip: 
                // the tooltip is only relevant to non-read only states
                !isReadOnly && isSaveAsDisabled
                    ? intl.formatMessage({ id: "options.menu.save.as.tooltip" })
                    : undefined,
                onClick: defaultOnSaveAs,
            },
            {
                type: "separator",
                itemId: "save-as-separator",
                visible: isSaveAsVisible,
            },
            {
                type: "button",
                itemId: "pdf-export-item",
                itemName: intl.formatMessage({ id: "options.menu.export.PDF" }),
                onClick: defaultOnExportToPdf,
                visible: isPdfExportVisible,
            },
            {
                type: "button",
                itemId: "schedule-email-item",
                itemName: intl.formatMessage({ id: "options.menu.schedule.email" }),
                onClick: defaultOnScheduleEmailing,
                visible: isScheduledEmailingVisible,
            },
            {
                type: "button",
                itemId: "delete_dashboard",
                itemName: intl.formatMessage({ id: "options.menu.delete" }),
                onClick: openDeleteDialog,
                visible: isDeleteVisible,
                className: "delete-button",
            },
        ];
    }, [
        defaultOnScheduleEmailing,
        defaultOnExportToPdf,
        isNewDashboard,
        isReadOnly,
        menuButtonItemsVisibility,
        canExportReport,
        isKPIDashboardExportPDFEnabled,
        isScheduledEmailingVisible,
    ]);
};
//# sourceMappingURL=useDefaultMenuItems.js.map