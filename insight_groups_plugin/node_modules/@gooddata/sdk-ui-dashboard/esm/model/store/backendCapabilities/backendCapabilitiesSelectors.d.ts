import { DashboardState } from "../types";
/**
 * This selector returns capabilities of the backend with which the dashboard works.
 *
 * @public
 */
export declare const selectBackendCapabilities: import("@reduxjs/toolkit").OutputSelector<DashboardState, import("@gooddata/sdk-backend-spi").IBackendCapabilities, (res: import("./backendCapabilitiesState").BackendCapabilitiesState) => import("@gooddata/sdk-backend-spi").IBackendCapabilities>;
/**
 * This selector returns capability if parent child filtering is enabled.
 *
 * @public
 */
export declare const selectSupportsElementsQueryParentFiltering: import("@reduxjs/toolkit").OutputSelector<DashboardState, boolean, (res: import("@gooddata/sdk-backend-spi").IBackendCapabilities) => boolean>;
/**
 * Selector for {@link IBackendCapabilities.supportsKpiWidget}
 *
 * @internal
 */
export declare const selectSupportsKpiWidgetCapability: import("@reduxjs/toolkit").OutputSelector<DashboardState, boolean, (res: import("@gooddata/sdk-backend-spi").IBackendCapabilities) => boolean>;
/**
 * Selector for {@link IBackendCapabilities.supportsAccessControl}
 *
 * @internal
 */
export declare const selectSupportsAccessControlCapability: import("@reduxjs/toolkit").OutputSelector<DashboardState, boolean, (res: import("@gooddata/sdk-backend-spi").IBackendCapabilities) => boolean>;
/**
 * Selector for {@link IBackendCapabilities.supportsHierarchicalWorkspaces}
 *
 * @internal
 */
export declare const selectSupportsHierarchicalWorkspacesCapability: import("@reduxjs/toolkit").OutputSelector<DashboardState, boolean, (res: import("@gooddata/sdk-backend-spi").IBackendCapabilities) => boolean>;
//# sourceMappingURL=backendCapabilitiesSelectors.d.ts.map