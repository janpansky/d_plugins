import { __generator } from "tslib";
import { call } from "redux-saga/effects";
import { isObjRef } from "@gooddata/sdk-model";
import { scheduledEmailSaved } from "../../events/scheduledEmail";
function saveScheduledEmail(ctx, scheduledEmail, filterContextRef) {
    var backend = ctx.backend, workspace = ctx.workspace;
    if (!isObjRef(scheduledEmail)) {
        throw new Error("Cannot save schedule not referencing to an persisted object");
    }
    return backend
        .workspace(workspace)
        .dashboards()
        .updateScheduledMail(scheduledEmail, scheduledEmail, filterContextRef);
}
export function saveScheduledEmailHandler(ctx, cmd) {
    var _a, scheduledEmail, filterContextRef;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                _a = cmd.payload, scheduledEmail = _a.scheduledEmail, filterContextRef = _a.filterContextRef;
                return [4 /*yield*/, call(saveScheduledEmail, ctx, scheduledEmail, filterContextRef)];
            case 1:
                _b.sent();
                return [2 /*return*/, scheduledEmailSaved(ctx, cmd.correlationId)];
        }
    });
}
//# sourceMappingURL=saveScheduledEmailHandler.js.map