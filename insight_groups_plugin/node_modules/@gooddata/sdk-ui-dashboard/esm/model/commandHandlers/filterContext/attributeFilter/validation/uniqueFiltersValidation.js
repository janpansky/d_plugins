import { __awaiter, __generator, __read } from "tslib";
// (C) 2021-2022 GoodData Corporation
import { areObjRefsEqual } from "@gooddata/sdk-model";
export function canFilterBeAdded(ctx, addedDisplayFormRef, allFilters) {
    return __awaiter(this, void 0, void 0, function () {
        var loadAddedDisplayForm, loadExistingDisplayForms, _a, addedDisplayForm, existingDisplayForms;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    // first filter is always ok, save some useless work upfront
                    if (allFilters.length === 0) {
                        return [2 /*return*/, true];
                    }
                    loadAddedDisplayForm = ctx.backend
                        .workspace(ctx.workspace)
                        .attributes()
                        .getAttributeDisplayForm(addedDisplayFormRef);
                    loadExistingDisplayForms = ctx.backend
                        .workspace(ctx.workspace)
                        .attributes()
                        .getAttributeDisplayForms(allFilters.map(function (item) { return item.attributeFilter.displayForm; }));
                    return [4 /*yield*/, Promise.all([
                            loadAddedDisplayForm,
                            loadExistingDisplayForms,
                        ])];
                case 1:
                    _a = __read.apply(void 0, [_b.sent(), 2]), addedDisplayForm = _a[0], existingDisplayForms = _a[1];
                    return [2 /*return*/, !existingDisplayForms.some(function (existing) { return areObjRefsEqual(existing, addedDisplayForm); })];
            }
        });
    });
}
//# sourceMappingURL=uniqueFiltersValidation.js.map