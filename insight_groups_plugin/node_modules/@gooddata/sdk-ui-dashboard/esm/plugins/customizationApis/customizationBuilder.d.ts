import { IDashboardCustomizer, IDashboardInsightCustomizer, IDashboardKpiCustomizer, IDashboardLayoutCustomizer, IDashboardWidgetCustomizer, IFilterBarCustomizer } from "../customizer";
import { IDashboardExtensionProps } from "../../presentation";
import { IDashboardPluginContract_V1 } from "../plugin";
/**
 * @internal
 */
export declare class DashboardCustomizationBuilder implements IDashboardCustomizer {
    private readonly logger;
    private readonly insightCustomizer;
    private readonly kpiCustomizer;
    private readonly widgetCustomizer;
    private readonly layoutCustomizer;
    private readonly filterBarCustomizer;
    private sealCustomizers;
    insightWidgets: () => IDashboardInsightCustomizer;
    kpiWidgets: () => IDashboardKpiCustomizer;
    customWidgets: () => IDashboardWidgetCustomizer;
    layout: () => IDashboardLayoutCustomizer;
    filterBar: () => IFilterBarCustomizer;
    onBeforePluginRegister: (plugin: IDashboardPluginContract_V1) => void;
    onAfterPluginRegister: () => void;
    onPluginRegisterError: (error: any) => void;
    build: () => IDashboardExtensionProps;
}
//# sourceMappingURL=customizationBuilder.d.ts.map